{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/hoc/withAuthComponent.tsx\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst withAuthComponent = Component => {\n  function RedirectComponent(props) {\n    if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 35\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  let mapStateToPropsForRedirect = state => {\n    return {\n      isAuth: state.auth.isAuth\n    };\n  };\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return RedirectComponent;\n};\n\nexport default RedirectComponent;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/hoc/withAuthComponent.tsx"],"names":["React","Redirect","connect","withAuthComponent","Component","RedirectComponent","props","isAuth","mapStateToPropsForRedirect","state","auth","ConnectedAuthRedirectComponent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;;AAOA,MAAMC,iBAAiB,GAAIC,SAAD,IAAoB;AAC1C,WAASC,iBAAT,CAA2BC,KAA3B,EAAuC;AACnC,QAAI,CAACA,KAAK,CAACC,MAAX,EAAmB,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACnB,wBAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIE,0BAA0B,GAAIC,KAAD,IAAwD;AACrF,WAAO;AACHF,MAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADhB,KAAP;AAGH,GAJD;;AAMA,MAAII,8BAA8B,GAAGT,OAAO,CAACM,0BAAD,CAAP,CAAoCH,iBAApC,CAArC;AACA,SAAOA,iBAAP;AACH,CAbD;;AAeA,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {AllAppStateType} from \"../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {AuthRedirectComponent} from \"../components/Dialogs/DialogsContainer\";\n\ntype mapStateToPropsForRedirect = {\n    isAuth: boolean\n}\n\nconst withAuthComponent = (Component: any) => {\n    function RedirectComponent(props: any) {\n        if (!props.isAuth) return <Redirect to={'/login'}/>\n        return <Component {...props}/>\n    }\n    let mapStateToPropsForRedirect = (state: AllAppStateType): mapStateToPropsForRedirect => {\n        return {\n            isAuth: state.auth.isAuth\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return RedirectComponent\n}\n\nexport default RedirectComponent"]},"metadata":{},"sourceType":"module"}