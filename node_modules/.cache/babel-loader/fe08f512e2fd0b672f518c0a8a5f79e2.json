{"ast":null,"code":"let store = {\n  _state: {\n    profilPage: {\n      posts: [{\n        message: 'Hi, how are you?',\n        likecount: \"15\"\n      }, {\n        message: \"It's my first post\",\n        likecount: \"16\"\n      }, {\n        message: \"blablabla\",\n        likecount: \"11\"\n      }],\n      newPostText: 'it-kamasutra'\n    },\n    dialogPage: {\n      dialogs: [{\n        name: 'Dima',\n        id: 1,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Andrey',\n        id: 2,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Alex',\n        id: 3,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Sveta',\n        id: 4,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Vova',\n        id: 5,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Dora',\n        id: 6,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Oleg',\n        id: 7,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }],\n      messages: [{\n        message: 'hi',\n        id: 1\n      }, {\n        message: 'good morning',\n        id: 2\n      }, {\n        message: 'hello',\n        id: 3\n      }, {\n        message: 'yo',\n        id: 4\n      }, {\n        message: 'How is going',\n        id: 5\n      }, {\n        message: 'Good bay',\n        id: 6\n      }, {\n        message: 'good night',\n        id: 7\n      }]\n    },\n    sidebar: {\n      friends: [{\n        name: 'Dima',\n        id: 1,\n        img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'\n      }, {\n        name: 'Dora',\n        id: 2,\n        img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'\n      }, {\n        name: 'Oleg',\n        id: 3,\n        img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'\n      }]\n    }\n  },\n\n  _callSubscriber(_state) {\n    console.log('state changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observed) {\n    this._callSubscriber = observed;\n  },\n\n  _updateNewPost(postText) {\n    this._state.profilPage.newPostText = postText;\n\n    this._callSubscriber(this._state);\n  },\n\n  _addPost() {\n    const newPost = {\n      id: 4,\n      message: store._state.profilPage.newPostText,\n      likecount: '0'\n    };\n\n    this._state.profilPage.posts.push(newPost);\n\n    this._state.profilPage.newPostText = ''; // дает  пустую строку\n\n    this._callSubscriber(this._state);\n  },\n\n  dispatch(action) {\n    if (action.type === 'ADD-POST') {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this._addPost;\n    } else if (action.type === 'UPDATE-NEW-POST') // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      {\n        this._updateNewPost;\n      }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: 'ADD-POST'\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: 'UPDATE-NEW-POST',\n  postText: text\n});\nexport default store; //window.store = store","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/State.ts"],"names":["store","_state","profilPage","posts","message","likecount","newPostText","dialogPage","dialogs","name","id","img","messages","sidebar","friends","_callSubscriber","console","log","getState","subscribe","observed","_updateNewPost","postText","_addPost","newPost","push","dispatch","action","type","addPostActionCreator","updateNewPostTextActionCreator","text"],"mappings":"AAsDA,IAAIA,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE;AACRC,MAAAA,KAAK,EAAE,CACH;AAACC,QAAAA,OAAO,EAAE,kBAAV;AAA8BC,QAAAA,SAAS,EAAE;AAAzC,OADG,EAEH;AAACD,QAAAA,OAAO,EAAE,oBAAV;AAAgCC,QAAAA,SAAS,EAAE;AAA3C,OAFG,EAGH;AAACD,QAAAA,OAAO,EAAE,WAAV;AAAuBC,QAAAA,SAAS,EAAE;AAAlC,OAHG,CADC;AAMRC,MAAAA,WAAW,EAAE;AANL,KADR;AASJC,IAAAA,UAAU,EAAE;AACRC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,IAAI,EAAE,MADV;AAEIC,QAAAA,EAAE,EAAE,CAFR;AAGIC,QAAAA,GAAG,EAAE;AAHT,OADK,EAML;AACIF,QAAAA,IAAI,EAAE,QADV;AAEIC,QAAAA,EAAE,EAAE,CAFR;AAGIC,QAAAA,GAAG,EAAE;AAHT,OANK,EAWL;AACIF,QAAAA,IAAI,EAAE,MADV;AAEIC,QAAAA,EAAE,EAAE,CAFR;AAGIC,QAAAA,GAAG,EAAE;AAHT,OAXK,EAgBL;AACIF,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,EAAE,EAAE,CAFR;AAGIC,QAAAA,GAAG,EAAE;AAHT,OAhBK,EAqBL;AACIF,QAAAA,IAAI,EAAE,MADV;AAEIC,QAAAA,EAAE,EAAE,CAFR;AAGIC,QAAAA,GAAG,EAAE;AAHT,OArBK,EA0BL;AACIF,QAAAA,IAAI,EAAE,MADV;AAEIC,QAAAA,EAAE,EAAE,CAFR;AAGIC,QAAAA,GAAG,EAAE;AAHT,OA1BK,EA+BL;AACIF,QAAAA,IAAI,EAAE,MADV;AAEIC,QAAAA,EAAE,EAAE,CAFR;AAGIC,QAAAA,GAAG,EAAE;AAHT,OA/BK,CADD;AAsCRC,MAAAA,QAAQ,EAAE,CACN;AAACR,QAAAA,OAAO,EAAE,IAAV;AAAgBM,QAAAA,EAAE,EAAE;AAApB,OADM,EAEN;AAACN,QAAAA,OAAO,EAAE,cAAV;AAA0BM,QAAAA,EAAE,EAAE;AAA9B,OAFM,EAGN;AAACN,QAAAA,OAAO,EAAE,OAAV;AAAmBM,QAAAA,EAAE,EAAE;AAAvB,OAHM,EAIN;AAACN,QAAAA,OAAO,EAAE,IAAV;AAAgBM,QAAAA,EAAE,EAAE;AAApB,OAJM,EAKN;AAACN,QAAAA,OAAO,EAAE,cAAV;AAA0BM,QAAAA,EAAE,EAAE;AAA9B,OALM,EAMN;AAACN,QAAAA,OAAO,EAAE,UAAV;AAAsBM,QAAAA,EAAE,EAAE;AAA1B,OANM,EAON;AAACN,QAAAA,OAAO,EAAE,YAAV;AAAwBM,QAAAA,EAAE,EAAE;AAA5B,OAPM;AAtCF,KATR;AAyDJG,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,CACL;AAACL,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,EAAE,EAAE,CAAnB;AAAsBC,QAAAA,GAAG,EAAE;AAA3B,OADK,EAEL;AAACF,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,EAAE,EAAE,CAAnB;AAAsBC,QAAAA,GAAG,EAAE;AAA3B,OAFK,EAGL;AAACF,QAAAA,IAAI,EAAE,MAAP;AAAeC,QAAAA,EAAE,EAAE,CAAnB;AAAsBC,QAAAA,GAAG,EAAE;AAA3B,OAHK;AADJ;AAzDL,GADA;;AAmERI,EAAAA,eAAe,CAACd,MAAD,EAAoB;AAC/Be,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GArEO;;AAsERC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKjB,MAAZ;AACH,GAxEO;;AAyERkB,EAAAA,SAAS,CAACC,QAAD,EAAuC;AAC5C,SAAKL,eAAL,GAAuBK,QAAvB;AACH,GA3EO;;AA4ERC,EAAAA,cAAc,CAACC,QAAD,EAAmB;AAC7B,SAAKrB,MAAL,CAAYC,UAAZ,CAAuBI,WAAvB,GAAqCgB,QAArC;;AACA,SAAKP,eAAL,CAAqB,KAAKd,MAA1B;AACH,GA/EO;;AAgFRsB,EAAAA,QAAQ,GAAG;AACP,UAAMC,OAAiB,GAAG;AACtBd,MAAAA,EAAE,EAAE,CADkB;AAEtBN,MAAAA,OAAO,EAAEJ,KAAK,CAACC,MAAN,CAAaC,UAAb,CAAwBI,WAFX;AAGtBD,MAAAA,SAAS,EAAE;AAHW,KAA1B;;AAKA,SAAKJ,MAAL,CAAYC,UAAZ,CAAuBC,KAAvB,CAA6BsB,IAA7B,CAAkCD,OAAlC;;AACA,SAAKvB,MAAL,CAAYC,UAAZ,CAAuBI,WAAvB,GAAqC,EAArC,CAPO,CAOqH;;AAC5H,SAAKS,eAAL,CAAqB,KAAKd,MAA1B;AACH,GAzFO;;AA0FRyB,EAAAA,QAAQ,CAACC,MAAD,EAAc;AAClB,QAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC5B;AACA,WAAKL,QAAL;AAAc,KAFlB,MAEwB,IAAII,MAAM,CAACC,IAAP,KAAgB,iBAApB,EACpB;AACJ;AAAC,aAAKP,cAAL;AAAoB;AACxB;;AAhGO,CAAZ;AAkGA,OAAO,MAAMQ,oBAAoB,GAAG,OAA0B;AAACD,EAAAA,IAAI,EAAE;AAAP,CAA1B,CAA7B;AAEP,OAAO,MAAME,8BAA8B,GAAIC,IAAD,KACzC;AAACH,EAAAA,IAAI,EAAE,iBAAP;AAA0BN,EAAAA,QAAQ,EAAES;AAApC,CADyC,CAAvC;AAKP,eAAe/B,KAAf,C,CACA","sourcesContent":["export type DialogType = {\n    name: string\n    id: number\n    img: string\n}\nexport type MessegeType = {\n    message: string\n    id: number\n}\nexport type PostType = {\n    message: string\n    id: number\n    likecount: string\n}\nexport type FriendType = {\n    name: string\n    id: number\n    img: string\n}\nexport type SidebarType = {\n    friends: Array<FriendType>\n}\nexport type ProfilPageType = {\n    posts: Array<PostType>\n    newPostText: string\n\n}\nexport type DialogPageType = {\n    dialogs: Array<DialogType>\n    messages: Array<MessegeType>\n}\nexport type StateType = {\n    profilPage: ProfilPageType\n    dialogPage: DialogPageType\n    sidebar: SidebarType\n}\nexport type AddPostActionType = {\n    type: 'ADD-POST'\n}\nexport type updateNewPostActionType = {\n    type: 'UPDATE-NEW-POST'\n    postText: string\n}\nexport type StoreType = {\n    _state: StateType\n    getState: () => StateType\n    _callSubscriber: () => void\n    updateNewPost: (postText: string) => void\n    addPost: (newPost: PostType) => void\n    subscribe: (observed: (state: StateType) => void) => void\n    dispatch: (action: ActionsTypes) => void\n}\nexport type ActionsTypes = (AddPostActionType | updateNewPostActionType)\n\nlet store = {\n    _state: {\n        profilPage: {\n            posts: [\n                {message: 'Hi, how are you?', likecount: \"15\"},\n                {message: \"It's my first post\", likecount: \"16\"},\n                {message: \"blablabla\", likecount: \"11\"}\n            ],\n            newPostText: 'it-kamasutra'\n        },\n        dialogPage: {\n            dialogs: [\n                {\n                    name: 'Dima',\n                    id: 1,\n                    img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n                },\n                {\n                    name: 'Andrey',\n                    id: 2,\n                    img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n                },\n                {\n                    name: 'Alex',\n                    id: 3,\n                    img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n                },\n                {\n                    name: 'Sveta',\n                    id: 4,\n                    img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n                },\n                {\n                    name: 'Vova',\n                    id: 5,\n                    img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n                },\n                {\n                    name: 'Dora',\n                    id: 6,\n                    img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n                },\n                {\n                    name: 'Oleg',\n                    id: 7,\n                    img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n                }\n            ],\n            messages: [\n                {message: 'hi', id: 1},\n                {message: 'good morning', id: 2},\n                {message: 'hello', id: 3},\n                {message: 'yo', id: 4},\n                {message: 'How is going', id: 5},\n                {message: 'Good bay', id: 6},\n                {message: 'good night', id: 7}\n            ]\n        },\n        sidebar: {\n            friends: [\n                {name: 'Dima', id: 1, img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'},\n                {name: 'Dora', id: 2, img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'},\n                {name: 'Oleg', id: 3, img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'},\n            ]\n        }\n\n    },\n    _callSubscriber(_state: StateType) {\n        console.log('state changed')\n    },\n    getState() {\n        return this._state\n    },\n    subscribe(observed: (state: StateType) => void) {\n        this._callSubscriber = observed\n    },\n    _updateNewPost(postText: string) {\n        this._state.profilPage.newPostText = postText\n        this._callSubscriber(this._state)\n    },\n    _addPost() {\n        const newPost: PostType = {\n            id: 4,\n            message: store._state.profilPage.newPostText,\n            likecount: '0'\n        };\n        this._state.profilPage.posts.push(newPost)\n        this._state.profilPage.newPostText = ''                                                                                     // дает  пустую строку\n        this._callSubscriber(this._state)\n    },\n    dispatch(action: any) {\n        if (action.type === 'ADD-POST') {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            this._addPost} else if (action.type === 'UPDATE-NEW-POST')\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        {this._updateNewPost}\n    }\n}\nexport const addPostActionCreator = (): AddPostActionType => ({type: 'ADD-POST'  })\n\nexport const updateNewPostTextActionCreator = (text: string): updateNewPostActionType =>\n    ({type: 'UPDATE-NEW-POST', postText: text})\n\n\n\nexport default store\n//window.store = store"]},"metadata":{},"sourceType":"module"}