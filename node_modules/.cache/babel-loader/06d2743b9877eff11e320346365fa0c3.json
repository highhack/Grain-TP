{"ast":null,"code":"import dialogReducer from \"./dialogReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport profilReducer from \"./profilReducer\";\nimport { combineReducers, createStore } from \"redux\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./authReducer\";\nexport const rootReducer = combineReducers({\n  dialogPage: dialogReducer,\n  profilPage: profilReducer,\n  sidebar: sidebarReducer,\n  usersPage: usersReducer,\n  auth: authReducer\n});\nlet store = createStore(rootReducer);\nexport default store; // export type StateType = {\n//     profilPage: ProfilPageType\n//     dialogPage: DialogPageType\n//     sidebar: SidebarType\n// }\n// export type StoreType = {\n//     _state: StateType\n//     getState: () => StateType\n//     _callSubscriber: () => void\n//     subscribe: (observed: (state: StateType) => void) => void\n//     dispatch: (action: ActionsTypes) => void\n//     // updateNewPost: (postText: string) => void\n//     // addPost: (newPost: PostType) => void\n// }","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/redux-store.ts"],"names":["dialogReducer","sidebarReducer","profilReducer","combineReducers","createStore","usersReducer","authReducer","rootReducer","dialogPage","profilPage","sidebar","usersPage","auth","store"],"mappings":"AACA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAAkD,OAAlD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAaA,OAAO,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AACvCK,EAAAA,UAAU,EAAER,aAD2B;AAEvCS,EAAAA,UAAU,EAAEP,aAF2B;AAGvCQ,EAAAA,OAAO,EAAET,cAH8B;AAIvCU,EAAAA,SAAS,EAAEN,YAJ4B;AAKvCO,EAAAA,IAAI,EAAEN;AALiC,CAAD,CAAnC;AAOP,IAAIO,KAAY,GAAGT,WAAW,CAACG,WAAD,CAA9B;AAEA,eAAgBM,KAAhB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport dialogReducer from \"./dialogReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport profilReducer from \"./profilReducer\";\nimport {combineReducers, createStore, Store} from \"redux\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./authReducer\";\n\nexport type DialogType = {\n    name: string\n    id: number\n    img: string\n}\nexport type MessegeType = {\n    message: string\n    id: number\n}\n\n\nexport const rootReducer = combineReducers({\n    dialogPage: dialogReducer,\n    profilPage: profilReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer\n})\nlet store: Store = createStore(rootReducer)\nexport type AllAppStateType = ReturnType<typeof rootReducer>\nexport  default store\n\n\n// export type StateType = {\n//     profilPage: ProfilPageType\n//     dialogPage: DialogPageType\n//     sidebar: SidebarType\n// }\n// export type StoreType = {\n//     _state: StateType\n//     getState: () => StateType\n//     _callSubscriber: () => void\n//     subscribe: (observed: (state: StateType) => void) => void\n//     dispatch: (action: ActionsTypes) => void\n//     // updateNewPost: (postText: string) => void\n//     // addPost: (newPost: PostType) => void\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}