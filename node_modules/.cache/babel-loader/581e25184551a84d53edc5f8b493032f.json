{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Profil/ProfilContainer.tsx\";\nimport React from 'react';\nimport Profil from \"./Profil\";\nimport { connect } from \"react-redux\";\nimport { getUserProfil } from \"../../Redux/profilReducer\";\nimport { Redirect, withRouter } from 'react-router-dom';\n\nclass ProfilContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = '2';\n    }\n\n    this.props.getUserProfil(userId);\n  }\n\n  render() {\n    if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 40\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profil, { ...this.props,\n        profil: this.props.profil\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profil: state.profilPage.profil,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet WithUrlDataProfilContainer = withRouter(ProfilContainer);\n_c = WithUrlDataProfilContainer;\nexport default connect(mapStateToProps, {\n  // setUserProfil,\n  getUserProfil\n})(WithUrlDataProfilContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"WithUrlDataProfilContainer\");","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Profil/ProfilContainer.tsx"],"names":["React","Profil","connect","getUserProfil","Redirect","withRouter","ProfilContainer","Component","componentDidMount","userId","props","match","params","render","isAuth","profil","mapStateToProps","state","profilPage","auth","WithUrlDataProfilContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AAEA,SAAQC,QAAR,EAAuCC,UAAvC,QAAwD,kBAAxD;;AAkBA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAAyD;AAErDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAuB,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAtD;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,GAAT;AACH;;AACD,SAAKC,KAAL,CAAWP,aAAX,CAAyBM,MAAzB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACxB,wBACI;AAAA,6BACI,QAAC,MAAD,OAAa,KAAKJ,KAAlB;AAAyB,QAAA,MAAM,EAAE,KAAKA,KAAL,CAAWK;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAjBoD;;AAqBzD,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHF,IAAAA,MAAM,EAAEE,KAAK,CAACC,UAAN,CAAiBH,MADtB;AAEHD,IAAAA,MAAM,EAAEG,KAAK,CAACE,IAAN,CAAWL;AAFhB,GAAP;AAIH,CALD;;AAOA,IAAIM,0BAA0B,GAAGf,UAAU,CAACC,eAAD,CAA3C;KAAIc,0B;AACJ,eAAelB,OAAO,CAACc,eAAD,EAClB;AACI;AACAb,EAAAA;AAFJ,CADkB,CAAP,CAIRiB,0BAJQ,CAAf","sourcesContent":["import React from 'react';\nimport Profil from \"./Profil\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {getUserProfil} from \"../../Redux/profilReducer\";\nimport {profilType} from \"./ProfilInfo/ProfilInfo\";\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\n\n\n\n\ntype MapStatePropsType = {\n    profil: profilType\n    isAuth: boolean\n}\ntype MapDispathPropsType = {\n    getUserProfil: (id: string) => void\n}\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\ntype PathParamsType = {\n    userId: string,\n}\ntype PropsType = RouteComponentProps<PathParamsType> & UsersPropsType\n\nclass ProfilContainer extends React.Component<PropsType> {\n\n    componentDidMount() {\n        let userId: string | number = this.props.match.params.userId\n        if (!userId) {\n            userId = '2'\n        }\n        this.props.getUserProfil(userId)\n    }\n\n    render() {\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>\n        return (\n            <div>\n                <Profil  {...this.props} profil={this.props.profil}/>\n            </div>\n        )\n    }\n\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        profil: state.profilPage.profil,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet WithUrlDataProfilContainer = withRouter(ProfilContainer)\nexport default connect(mapStateToProps,\n    {\n        // setUserProfil,\n        getUserProfil\n    })(WithUrlDataProfilContainer)\n\n"]},"metadata":{},"sourceType":"module"}