{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { followAC, unFollowAC, setUsersAC, setCurrentPageAC, setUsersTotalCountAC } from \"../../Redux/usersReducer\";\nimport UsersAPIComponent from \"./UsersAPIComponent\";\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFeching: state.usersPage.isFeching\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unFollowAC(userID));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setUsersTotalCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    }\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx"],"names":["connect","followAC","unFollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","UsersAPIComponent","mapStateToProps","state","users","usersPage","pageSize","totalUsersCount","currentPage","isFeching","mapDispatchToProps","dispatch","follow","userID","unfollow","setUsers","setCurrentPage","pageNumber","setUsersTotalCount","totalCount","UsersContainer"],"mappings":"AACA,SAAQA,OAAR,QAAsB,aAAtB;AAGA,SACIC,QADJ,EAEIC,UAFJ,EAGIC,UAHJ,EAKIC,gBALJ,EAMIC,oBANJ,QAOO,0BAPP;AAQA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAkBA,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADpB;AAEHE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,SAAN,CAAgBC,QAFvB;AAGHC,IAAAA,eAAe,EAAEJ,KAAK,CAACE,SAAN,CAAgBE,eAH9B;AAIHC,IAAAA,WAAW,EAAEL,KAAK,CAACE,SAAN,CAAgBG,WAJ1B;AAKHC,IAAAA,SAAS,EAAEN,KAAK,CAACE,SAAN,CAAgBI;AALxB,GAAP;AAOH,CARD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAA6C;AACpE,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAY;AAChBF,MAAAA,QAAQ,CAACf,QAAQ,CAACiB,MAAD,CAAT,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAY;AAClBF,MAAAA,QAAQ,CAACd,UAAU,CAACgB,MAAD,CAAX,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGX,KAAD,IAAW;AACjBO,MAAAA,QAAQ,CAACb,UAAU,CAACM,KAAD,CAAX,CAAR;AACH,KATE;AAUHY,IAAAA,cAAc,EAAGC,UAAD,IAAgB;AAC5BN,MAAAA,QAAQ,CAACZ,gBAAgB,CAACkB,UAAD,CAAjB,CAAR;AACH,KAZE;AAaHC,IAAAA,kBAAkB,EAAGC,UAAD,IAAgB;AAChCR,MAAAA,QAAQ,CAACX,oBAAoB,CAACmB,UAAD,CAArB,CAAR;AACH;AAfE,GAAP;AAmBH,CApBD;;AAqBA,MAAMC,cAAc,GAAGzB,OAAO,CAACO,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CT,iBAA7C,CAAvB;AAEA,eAAemB,cAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {\n    followAC,\n    unFollowAC,\n    setUsersAC,\n    UsersType,\n    setCurrentPageAC,\n    setUsersTotalCountAC\n} from \"../../Redux/usersReducer\";\nimport UsersAPIComponent from \"./UsersAPIComponent\";\n\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n}\ntype MapDispathPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    setUsers: (newUsers: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setUsersTotalCount: (totalUsersCount: number) => void\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFeching: state.usersPage.isFeching\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n    return {\n        follow: (userID) => {\n            dispatch(followAC(userID))\n        },\n        unfollow: (userID) => {\n            dispatch(unFollowAC(userID))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setUsersTotalCount: (totalCount) => {\n            dispatch(setUsersTotalCountAC(totalCount))\n        },\n\n    }\n\n}\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersAPIComponent)\n\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}