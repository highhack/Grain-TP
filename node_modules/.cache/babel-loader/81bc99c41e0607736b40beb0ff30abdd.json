{"ast":null,"code":"import Users from\"./Users\";import{connect}from\"react-redux\";import{followAC,unFollowAC,setUsersAC}from\"../../Redux/usersReducer\";var mapStateToProps=function mapStateToProps(state){return{users:state.usersPage.users};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{follow:function follow(userID){dispatch(followAC(userID));},unfollow:function unfollow(userID){dispatch(unFollowAC(userID));},setUsers:function setUsers(newUsers){dispatch(setUsersAC(newUsers));}};};var UsersContainer=connect(mapStateToProps,mapDispatchToProps)(Users);export default UsersContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx"],"names":["Users","connect","followAC","unFollowAC","setUsersAC","mapStateToProps","state","users","usersPage","mapDispatchToProps","dispatch","follow","userID","unfollow","setUsers","newUsers","UsersContainer"],"mappings":"AACA,MAAOA,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CAGA,OAAQC,QAAR,CAAkBC,UAAlB,CAA8BC,UAA9B,KAA0D,0BAA1D,CAaA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAA+C,CACjE,MAAO,CACHC,KAAK,CAAED,KAAK,CAACE,SAAN,CAAgBD,KADpB,CAAP,CAGH,CAJD,CAKA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAA6C,CACpE,MAAO,CACHC,MAAM,CAAE,gBAACC,MAAD,CAAY,CAChBF,QAAQ,CAACR,QAAQ,CAACU,MAAD,CAAT,CAAR,CACH,CAHE,CAIHC,QAAQ,CAAE,kBAACD,MAAD,CAAY,CAClBF,QAAQ,CAACP,UAAU,CAACS,MAAD,CAAX,CAAR,CACH,CANE,CAOHE,QAAQ,CAAE,kBAACC,QAAD,CAAc,CACpBL,QAAQ,CAACN,UAAU,CAACW,QAAD,CAAX,CAAR,CACH,CATE,CAAP,CAYH,CAbD,CAcA,GAAMC,CAAAA,cAAc,CAAGf,OAAO,CAACI,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CT,KAA7C,CAAvB,CAEA,cAAegB,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport Users from \"./Users\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {followAC, unFollowAC, setUsersAC, UsersType} from \"../../Redux/usersReducer\";\n\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    users: Array<UsersType>\n}\ntype MapDispathPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    setUsers: (newUsers: Array<UsersType>) => void\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n    return {\n        follow: (userID) => {\n            dispatch(followAC(userID))\n        },\n        unfollow: (userID) => {\n            dispatch(unFollowAC(userID))\n        },\n        setUsers: (newUsers) => {\n            dispatch(setUsersAC(newUsers))\n        }\n    }\n\n}\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)\n\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}