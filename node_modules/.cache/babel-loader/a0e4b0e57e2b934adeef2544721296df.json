{"ast":null,"code":"import { addMassageActionCreator, updateNewMassageBodyActionCreator } from '../../Redux/dialogReducer';\nimport Dialogs from \"./Dialogs\";\nimport { connect } from 'react-redux';\nimport withAuthComponent from \"../../hoc/withAuthComponent\";\n\nlet mapStateToProps = state => {\n  return {\n    dialogPage: state.dialogPage\n  };\n};\n\nlet AuthRedirectComponent = withAuthComponent(Dialogs); // let mapStateToPropsForRedirect = (state: AllAppStateType): mapStateToPropsForRedirect => {\n//     return {\n//         isAuth: state.auth.isAuth\n//     }\n// }\n// // @ts-ignore\n// let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\n\n_c = AuthRedirectComponent;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMassage: () => {\n      dispatch(addMassageActionCreator());\n    },\n    updateNewMassageBody: body => {\n      dispatch(updateNewMassageBodyActionCreator(body));\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(ConnectedAuthRedirectComponent);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRedirectComponent\");","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Dialogs/DialogsContainer.tsx"],"names":["addMassageActionCreator","updateNewMassageBodyActionCreator","Dialogs","connect","withAuthComponent","mapStateToProps","state","dialogPage","AuthRedirectComponent","mapDispatchToProps","dispatch","addMassage","updateNewMassageBody","body","DialogsContainer","ConnectedAuthRedirectComponent"],"mappings":"AACA,SACIA,uBADJ,EAGIC,iCAHJ,QAIO,2BAJP;AAKA,OAAOC,OAAP,MAAoB,WAApB;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,iBAAP,MAA8B,6BAA9B;;AAiBA,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHC,IAAAA,UAAU,EAAED,KAAK,CAACC;AADf,GAAP;AAGH,CAJD;;AAMA,IAAIC,qBAAqB,GAAGJ,iBAAiB,CAACF,OAAD,CAA7C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;KARIM,qB;;AAWJ,MAAMC,kBAAkB,GAAIC,QAAD,IAA6C;AACpE,SAAO;AACHC,IAAAA,UAAU,EAAE,MAAM;AACdD,MAAAA,QAAQ,CAACV,uBAAuB,EAAxB,CAAR;AACH,KAHE;AAIHY,IAAAA,oBAAoB,EAAGC,IAAD,IAAkB;AACpCH,MAAAA,QAAQ,CAACT,iCAAiC,CAACY,IAAD,CAAlC,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAUA,MAAMC,gBAAgB,GAAGX,OAAO,CAACE,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CM,8BAA7C,CAAzB;AAEA,eAAeD,gBAAf","sourcesContent":["import React from 'react';\nimport {\n    addMassageActionCreator,\n    InitialStateDialogType,\n    updateNewMassageBodyActionCreator\n} from '../../Redux/dialogReducer';\nimport Dialogs from \"./Dialogs\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {connect} from 'react-redux';\nimport {Redirect} from \"react-router-dom\";\nimport withAuthComponent from \"../../hoc/withAuthComponent\";\n\n\nexport type DialogsPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    dialogPage: InitialStateDialogType\n\n}\ntype mapStateToPropsForRedirect = {\n    isAuth: boolean\n}\ntype MapDispathPropsType = {\n    addMassage: () => void\n    updateNewMassageBody: (body: string) => void\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        dialogPage: state.dialogPage,\n    }\n}\n\nlet AuthRedirectComponent = withAuthComponent(Dialogs)\n\n// let mapStateToPropsForRedirect = (state: AllAppStateType): mapStateToPropsForRedirect => {\n//     return {\n//         isAuth: state.auth.isAuth\n//     }\n// }\n// // @ts-ignore\n// let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\n\n\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n    return {\n        addMassage: () => {\n            dispatch(addMassageActionCreator())\n        },\n        updateNewMassageBody: (body: string) => {\n            dispatch(updateNewMassageBodyActionCreator(body))\n        }\n    }\n}\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(ConnectedAuthRedirectComponent)\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}