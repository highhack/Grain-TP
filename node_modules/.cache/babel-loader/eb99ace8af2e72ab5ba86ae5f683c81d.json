{"ast":null,"code":"import { combineReducers, createStore } from \"@reduxjs/toolkit\";\nimport dialogReducer from \"./dialogReducer\";\nimport profilReducer from \"./profilReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nlet reducers = combineReducers({\n  dialogPage: dialogReducer,\n  profilPage: profilReducer,\n  sidebar: sidebarReducer\n});\nlet store = createStore(reducers);\nexport default store;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/redux-store.ts"],"names":["combineReducers","createStore","dialogReducer","profilReducer","sidebarReducer","reducers","dialogPage","profilPage","sidebar","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,OAAOC,aAAP,MAAwF,iBAAxF;AACA,OAAOC,aAAP,MAAkF,iBAAlF;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAqDA,IAAIC,QAAQ,GAAGL,eAAe,CAAC;AAC3BM,EAAAA,UAAU,EAAEJ,aADe;AAE3BK,EAAAA,UAAU,EAAEJ,aAFe;AAG3BK,EAAAA,OAAO,EAAEJ;AAHkB,CAAD,CAA9B;AAKA,IAAIK,KAAK,GAAGR,WAAW,CAACI,QAAD,CAAvB;AAEA,eAAgBI,KAAhB","sourcesContent":["import {combineReducers, createStore } from \"@reduxjs/toolkit\";\nimport dialogReducer, {addMassageActionCreator, updateNewMassageBodyActionCreator} from \"./dialogReducer\";\nimport profilReducer, {addPostActionCreator, updateNewPostTextActionCreator} from \"./profilReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\n\nexport type DialogType = {\n    name: string\n    id: number\n    img: string\n}\nexport type MessegeType = {\n    message: string\n    id: number\n}\nexport type PostType = {\n    message: string\n    id: number\n    likecount: string\n}\nexport type FriendType = {\n    name: string\n    id: number\n    img: string\n}\nexport type SidebarType = {\n    friends: Array<FriendType>\n}\nexport type ProfilPageType = {\n    posts: Array<PostType>\n    newPostText: string\n\n}\nexport type DialogPageType = {\n    dialogs: Array<DialogType>\n    messages: Array<MessegeType>\n    newMassageBody: string\n}\nexport type StateType = {\n    profilPage: ProfilPageType\n    dialogPage: DialogPageType\n    sidebar: SidebarType\n}\nexport type StoreType = {\n    profilPage: ProfilPageType\n    dialogPage: DialogPageType\n    sidebar: SidebarType\n    getState: () => StateType\n    _callSubscriber: () => void\n    subscribe: (observed: (state: StateType) => void) => void\n    dispatch: (action: ActionsTypes) => void\n    // updateNewPost: (postText: string) => void\n    // addPost: (newPost: PostType) => void\n}\nexport type ActionsTypes = (ReturnType<typeof addPostActionCreator> | ReturnType<typeof updateNewPostTextActionCreator> |\n    ReturnType<typeof addMassageActionCreator> | ReturnType<typeof updateNewMassageBodyActionCreator>)\n\nlet reducers = combineReducers({\n    dialogPage: dialogReducer,\n    profilPage: profilReducer,\n    sidebar: sidebarReducer\n})\nlet store = createStore(reducers)\n\nexport  default store"]},"metadata":{},"sourceType":"module"}