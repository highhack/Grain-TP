{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import s from'./MyPosts.module.css';import Post from'./Post/Post';// export type PostType = {\n//     message: string\n//     id: number\n//     likecount: string\n// }\n// type PropsType = {\n//     posts: Array<PostType>\n//     newPostText: string\n//     updateNewPostText: (text: string) => void\n//     addPost: () => void\n// }\nvar MyPosts=function MyPosts(props){var PostsElements=props.profilPage.posts.map(function(p){return/*#__PURE__*/_jsx(Post,{message:p.message,likecount:p.likecount});});var onAddPost=function onAddPost(){props.addPost();//функция которая сидит в state (addPost) и добавляет пост после нажатия на кнопку и перерисовывает\n};// props.updateNewPost('')      функция обновляет данные в state и перерисовывает пустую строку (перенесли это действие в state\nvar onPostChange=function onPostChange(e){var text=e.currentTarget.value;props.updateNewPostText(text);//функция которая сидит в state и обновляет данные при написании текста textarea\n};return/*#__PURE__*/_jsxs(\"div\",{className:s.mypost,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"My posts\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"textarea\",{onChange:onPostChange,value:props.profilPage.newPostText})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:onAddPost,children:\"Add post\"})}),PostsElements]});};export default MyPosts;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Profil/MyPosts/MyPosts.tsx"],"names":["React","s","Post","MyPosts","props","PostsElements","profilPage","posts","map","p","message","likecount","onAddPost","addPost","onPostChange","e","text","currentTarget","value","updateNewPostText","mypost","newPostText"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAiC,OAAjC,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAA4B,CACxC,GAAIC,CAAAA,aAAa,CAAGD,KAAK,CAACE,UAAN,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2B,SAAAC,CAAC,qBAAI,KAAC,IAAD,EAAM,OAAO,CAAEA,CAAC,CAACC,OAAjB,CAA0B,SAAS,CAAED,CAAC,CAACE,SAAvC,EAAJ,EAA5B,CAApB,CACA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAClBR,KAAK,CAACS,OAAN,GAAiH;AACpH,CAFD,CAEyH;AACzH,GAAIC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAyC,CACxD,GAAIC,CAAAA,IAAI,CAAGD,CAAC,CAACE,aAAF,CAAgBC,KAA3B,CACAd,KAAK,CAACe,iBAAN,CAAwBH,IAAxB,EAAiH;AACpH,CAHD,CAIA,mBACI,aAAK,SAAS,CAAEf,CAAC,CAACmB,MAAlB,wBACI,gCADJ,cAEI,kCACI,iBAAU,QAAQ,CAAEN,YAApB,CAAkC,KAAK,CAAEV,KAAK,CAACE,UAAN,CAAiBe,WAA1D,EADJ,EAFJ,cAKI,kCACI,eAAQ,OAAO,CAAET,SAAjB,sBADJ,EALJ,CAQKP,aARL,GADJ,CAYH,CArBD,CAuBA,cAAeF,CAAAA,OAAf","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {ProfilPropsType} from \"./MyPostsContainer\";\n\n// export type PostType = {\n//     message: string\n//     id: number\n//     likecount: string\n// }\n// type PropsType = {\n//     posts: Array<PostType>\n//     newPostText: string\n//     updateNewPostText: (text: string) => void\n//     addPost: () => void\n// }\nconst MyPosts = (props: ProfilPropsType) => {\n    let PostsElements = props.profilPage.posts.map(p => <Post message={p.message} likecount={p.likecount}/>)\n    let onAddPost = () => {\n        props.addPost()                                                                                                  //функция которая сидит в state (addPost) и добавляет пост после нажатия на кнопку и перерисовывает\n    }                                                                                                                        // props.updateNewPost('')      функция обновляет данные в state и перерисовывает пустую строку (перенесли это действие в state\n    let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        let text = e.currentTarget.value\n        props.updateNewPostText(text)                                                                                    //функция которая сидит в state и обновляет данные при написании текста textarea\n    }\n    return (\n        <div className={s.mypost}>\n            <h3>My posts</h3>\n            <div>\n                <textarea onChange={onPostChange} value={props.profilPage.newPostText}/>\n            </div>\n            <div>\n                <button onClick={onAddPost}>Add post</button>\n            </div>\n            {PostsElements}\n        </div>\n    )\n};\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}