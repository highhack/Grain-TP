{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nlet initialState = {};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.newUsers]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport const unFollowAC = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport const setUsersAC = newUsers => ({\n  type: SET_USERS,\n  newUsers\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/usersReducer.ts"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","usersReducer","state","action","type","users","map","u","id","userID","followed","newUsers","followAC","unFollowAC","setUsersAC"],"mappings":"AAEA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAeA,IAAIC,YAAmC,GAAG,EAA1C;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAA4B,GAAGF,YAAhC,EAA8CG,MAA9C,KAA6F;AAC9G,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,MAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AAAC,iBAAOH,CAAP;AACL,SAJM;AAFJ,OAAP;;AAQJ,SAAKT,QAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AAAC,iBAAOH,CAAP;AACL,SAJM;AAFJ,OAAP;;AAQJ,SAAKR,SAAL;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAWG,QAAAA,KAAK,EAAE,CAAE,GAAGH,KAAK,CAACG,KAAX,EAAkB,GAAGF,MAAM,CAACQ,QAA5B;AAAlB,OAAP;;AACJ;AACI,aAAOT,KAAP;AAtBR;AAwBH,CAzBD;;AA2BA,OAAO,MAAMU,QAAQ,GAAIH,MAAD,KAAqB;AAACL,EAAAA,IAAI,EAAEP,MAAP;AAAeY,EAAAA;AAAf,CAArB,CAAjB;AACP,OAAO,MAAMI,UAAU,GAAIJ,MAAD,KAAqB;AAACL,EAAAA,IAAI,EAAEN,QAAP;AAAiBW,EAAAA;AAAjB,CAArB,CAAnB;AACP,OAAO,MAAMK,UAAU,GAAIH,QAAD,KAAiC;AAACP,EAAAA,IAAI,EAAEL,SAAP;AAAkBY,EAAAA;AAAlB,CAAjC,CAAnB;AAMP,eAAeV,YAAf","sourcesContent":["\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET-USERS'\n\nexport type UsersType = {\n    id: number\n    followed: boolean\n    fullName: string\n    status: string\n    location: {city: string,\n        country: string}\n    photoUrl: string\n}\n\nexport type InitialStateUsersType = {\n    users: Array<UsersType>\n}\nlet initialState: InitialStateUsersType = {\n}\n\n\nconst usersReducer = (state: InitialStateUsersType = initialState, action: ActionsType): InitialStateUsersType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: true}\n                    } return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: false}\n                    } return u\n                })\n            }\n        case SET_USERS:\n            return {...state, users: [ ...state.users, ...action.newUsers]}\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userID: number) => ({type: FOLLOW, userID } as const)\nexport const unFollowAC = (userID: number) => ({type: UNFOLLOW, userID} as const)\nexport const setUsersAC = (newUsers: Array<UsersType>) => ({type: SET_USERS, newUsers} as const)\ntype ActionsType =\n    | ReturnType<typeof followAC>\n    | ReturnType<typeof unFollowAC>\n    | ReturnType<typeof setUsersAC>\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}