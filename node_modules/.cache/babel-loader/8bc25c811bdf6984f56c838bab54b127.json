{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { followAC, unFollowAC, setUsersAC, setCurrentPageAC } from \"../../Redux/usersReducer\";\nimport UsersClass from \"./UsersClass\";\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    pageNumber: state.usersPage.currentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unFollowAC(userID));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    }\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersClass);\nexport default UsersContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx"],"names":["connect","followAC","unFollowAC","setUsersAC","setCurrentPageAC","UsersClass","mapStateToProps","state","users","usersPage","pageSize","totalUsersCount","pageNumber","currentPage","mapDispatchToProps","dispatch","follow","userID","unfollow","setUsers","setCurrentPage","UsersContainer"],"mappings":"AACA,SAAQA,OAAR,QAAsB,aAAtB;AAGA,SAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,UAA9B,EAAqDC,gBAArD,QAA4E,0BAA5E;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAiBA,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADpB;AAEHE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,SAAN,CAAgBC,QAFvB;AAGHC,IAAAA,eAAe,EAAEJ,KAAK,CAACE,SAAN,CAAgBE,eAH9B;AAIHC,IAAAA,UAAU,EAAEL,KAAK,CAACE,SAAN,CAAgBI;AAJzB,GAAP;AAMH,CAPD;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAA6C;AACpE,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAY;AAChBF,MAAAA,QAAQ,CAACd,QAAQ,CAACgB,MAAD,CAAT,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAY;AAClBF,MAAAA,QAAQ,CAACb,UAAU,CAACe,MAAD,CAAX,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGX,KAAD,IAAW;AACjBO,MAAAA,QAAQ,CAACZ,UAAU,CAACK,KAAD,CAAX,CAAR;AACH,KATE;AAUHY,IAAAA,cAAc,EAAGR,UAAD,IAAgB;AAC5BG,MAAAA,QAAQ,CAACX,gBAAgB,CAACQ,UAAD,CAAjB,CAAR;AACH;AAZE,GAAP;AAeH,CAhBD;;AAiBA,MAAMS,cAAc,GAAGrB,OAAO,CAACM,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CT,UAA7C,CAAvB;AAEA,eAAegB,cAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {followAC, unFollowAC, setUsersAC, UsersType, setCurrentPageAC} from \"../../Redux/usersReducer\";\nimport UsersClass from \"./UsersClass\";\n\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    pageNumber: number\n}\ntype MapDispathPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    setUsers: (newUsers: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        pageNumber: state.usersPage.currentPage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n    return {\n        follow: (userID) => {\n            dispatch(followAC(userID))\n        },\n        unfollow: (userID) => {\n            dispatch(unFollowAC(userID))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        }\n    }\n\n}\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersClass)\n\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}