{"ast":null,"code":"import { usersApi } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST';\nconst SET_USER_PROFIL = 'SET-USER-PROFIL';\nconst GET_USER_PROFIL = 'GET-USER-PROFIL';\nlet initialState = {\n  posts: [{\n    message: 'Hi, how are you?',\n    id: 1,\n    likecount: \"15\"\n  }, {\n    message: \"It's my first post\",\n    id: 2,\n    likecount: \"16\"\n  }, {\n    message: \"blablabla\",\n    id: 3,\n    likecount: \"11\"\n  }],\n  newPostText: 'it-kamasutra',\n  profil: null\n};\n\nconst profilReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return { ...state,\n        newPostText: '',\n        posts: [...state.posts, {\n          id: 4,\n          message: state.newPostText,\n          likecount: '0'\n        }]\n      };\n\n    case UPDATE_NEW_POST:\n      return { ...state,\n        newPostText: action.text\n      };\n\n    case SET_USER_PROFIL:\n      return { ...state,\n        profil: action.profil\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const setUserProfil = profil => ({\n  type: SET_USER_PROFIL,\n  profil\n});\nexport const getUserProfil = userId => {\n  return dispatch => {\n    usersApi.getProfile(userId).then(response => {\n      dispatch(setUserProfil(response.data));\n    });\n  };\n};\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST,\n  text\n});\nexport default profilReducer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/profilReducer.ts"],"names":["usersApi","ADD_POST","UPDATE_NEW_POST","SET_USER_PROFIL","GET_USER_PROFIL","initialState","posts","message","id","likecount","newPostText","profil","profilReducer","state","action","type","text","addPostActionCreator","setUserProfil","getUserProfil","userId","dispatch","getProfile","then","response","data","updateNewPostTextActionCreator"],"mappings":"AACA,SAAQA,QAAR,QAAuB,YAAvB;AAGA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAcA,IAAIC,YAAkC,GAAG;AACrCC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,OAAO,EAAE,kBAAV;AAA8BC,IAAAA,EAAE,EAAE,CAAlC;AAAqCC,IAAAA,SAAS,EAAE;AAAhD,GADG,EAEH;AAACF,IAAAA,OAAO,EAAE,oBAAV;AAAgCC,IAAAA,EAAE,EAAE,CAApC;AAAuCC,IAAAA,SAAS,EAAE;AAAlD,GAFG,EAGH;AAACF,IAAAA,OAAO,EAAE,WAAV;AAAuBC,IAAAA,EAAE,EAAE,CAA3B;AAA8BC,IAAAA,SAAS,EAAE;AAAzC,GAHG,CAD8B;AAMrCC,EAAAA,WAAW,EAAE,cANwB;AAOrCC,EAAAA,MAAM,EAAE;AAP6B,CAAzC;;AAWA,MAAMC,aAAa,GAAG,CAACC,KAA2B,GAAGR,YAA/B,EAA6CS,MAA7C,KAA2F;AAC7G,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,QAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHH,QAAAA,WAAW,EAAE,EAFV;AAGHJ,QAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiB;AAACE,UAAAA,EAAE,EAAE,CAAL;AAAQD,UAAAA,OAAO,EAAEM,KAAK,CAACH,WAAvB;AAAoCD,UAAAA,SAAS,EAAE;AAA/C,SAAjB;AAHJ,OAAP;;AAKJ,SAAKP,eAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACE;AAFjB,OAAP;;AAIJ,SAAKb,eAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHF,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAFZ,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAlBR;AAoBH,CArBD;;AAuBA,OAAO,MAAMI,oBAAoB,GAAG,OAAO;AAACF,EAAAA,IAAI,EAAEd;AAAP,CAAP,CAA7B;AACP,OAAO,MAAMiB,aAAa,GAAIP,MAAD,KAAkB;AAACI,EAAAA,IAAI,EAAEZ,eAAP;AAAwBQ,EAAAA;AAAxB,CAAlB,CAAtB;AACP,OAAO,MAAMQ,aAAa,GAAIC,MAAD,IAAoB;AAC7C,SAAQC,QAAD,IAAwB;AAC3BrB,IAAAA,QAAQ,CAACsB,UAAT,CAAoBF,MAApB,EACKG,IADL,CACUC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACH,aAAa,CAACM,QAAQ,CAACC,IAAV,CAAd,CAAR;AACH,KAHL;AAIH,GALD;AAMH,CAPM;AAQP,OAAO,MAAMC,8BAA8B,GAAIV,IAAD,KACzC;AAACD,EAAAA,IAAI,EAAEb,eAAP;AAAwBc,EAAAA;AAAxB,CADyC,CAAvC;AAQP,eAAeJ,aAAf","sourcesContent":["import {profilType} from \"../components/Profil/ProfilInfo/ProfilInfo\";\nimport {usersApi} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\nconst ADD_POST = 'ADD-POST'\nconst UPDATE_NEW_POST = 'UPDATE-NEW-POST'\nconst SET_USER_PROFIL = 'SET-USER-PROFIL'\nconst GET_USER_PROFIL = 'GET-USER-PROFIL'\n\nexport type PostType = {\n    message: string\n    id: number\n    likecount: string\n}\n\nexport type InitialStatePostType = {\n    posts: Array<PostType>\n    newPostText: string\n    profil: profilType\n}\n\nlet initialState: InitialStatePostType = {\n    posts: [\n        {message: 'Hi, how are you?', id: 1, likecount: \"15\"},\n        {message: \"It's my first post\", id: 2, likecount: \"16\"},\n        {message: \"blablabla\", id: 3, likecount: \"11\"}\n    ],\n    newPostText: 'it-kamasutra',\n    profil: null\n\n}\n\nconst profilReducer = (state: InitialStatePostType = initialState, action: ActionsType): InitialStatePostType => {\n    switch (action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                newPostText: '',\n                posts: [...state.posts, {id: 4, message: state.newPostText, likecount: '0'}]\n            }\n        case UPDATE_NEW_POST:\n            return {\n                ...state,\n                newPostText: action.text\n            }\n        case SET_USER_PROFIL:\n            return {\n                ...state,\n                profil: action.profil\n            }\n        default:\n            return state\n    }\n}\n\nexport const addPostActionCreator = () => ({type: ADD_POST} as const)\nexport const setUserProfil = (profil: any) => ({type: SET_USER_PROFIL, profil} as const)\nexport const getUserProfil = (userId: number) => {\n    return (dispatch: Dispatch) => {\n        usersApi.getProfile(userId)\n            .then(response => {\n                dispatch(setUserProfil(response.data))\n            })\n    }\n}\nexport const updateNewPostTextActionCreator = (text: string) =>\n    ({type: UPDATE_NEW_POST, text} as const)\ntype ActionsType =\n    | ReturnType<typeof addPostActionCreator>\n    | ReturnType<typeof updateNewPostTextActionCreator>\n    | ReturnType<typeof setUserProfil>\n    | ReturnType<typeof getUserProfil>\n\nexport default profilReducer"]},"metadata":{},"sourceType":"module"}