{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, unfollow, setUsers, setCurrentPage, setUsersTotalCount, toggleIsFetching, toggleFollowingInProgress, getUserThunkCreator } from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../../common/Preloader\";\nimport { getUsers } from \"../../api/api\";\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeNumber = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      getUsers(pageNumber, this.props.pageSize) // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\n      // {withCredentials: true})\n      .then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n        this.props.setUsersTotalCount(data.totalCount);\n      });\n    };\n  }\n\n  componentDidMount() {\n    getUserThunkCreator(); // this.props.toggleIsFetching(true)\n    // getUsers(this.props.currentPage ,this.props.pageSize)   // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\n    //     // {withCredentials: true})\n    //     .then(data => {\n    //         this.props.toggleIsFetching(false)\n    //         this.props.setUsers(data.items)\n    //         this.props.setUsersTotalCount(data.totalCount)\n    //     })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        onChangeNumber: this.onChangeNumber,\n        setUsers: this.props.setUsers,\n        setCurrentPage: this.props.setCurrentPage,\n        followingInProgress: this.props.followingInProgress,\n        toggleFollowingInProgress: this.props.toggleFollowingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n}; // const mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n//     return {\n//         follow: (userID) => {\n//             dispatch(followAC(userID))\n//         },\n//         unfollow: (userID) => {\n//             dispatch(unFollowAC(userID))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setUsersTotalCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetching(isFetching))\n//         },\n//\n//     }\n//\n// }\n\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setUsersTotalCount,\n  toggleIsFetching,\n  toggleFollowingInProgress\n})(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingInProgress","getUserThunkCreator","Users","Preloader","getUsers","UsersAPIComponent","Component","onChangeNumber","pageNumber","props","pageSize","then","data","items","totalCount","componentDidMount","render","isFetching","totalUsersCount","currentPage","users","followingInProgress","mapStateToProps","state","usersPage","UsersContainer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {\n    follow,\n    unfollow,\n    setUsers,\n    UsersType,\n    setCurrentPage,\n    setUsersTotalCount, toggleIsFetching, toggleFollowingInProgress, getUserThunkCreator\n} from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../../common/Preloader\";\nimport {getUsers} from \"../../api/api\";\n\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\ntype MapDispathPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    setUsers: (users: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setUsersTotalCount: (totalUsersCount: number) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) => void\n}\n\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\n\n    componentDidMount() {\n        getUserThunkCreator ()\n        // this.props.toggleIsFetching(true)\n        // getUsers(this.props.currentPage ,this.props.pageSize)   // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\n        //     // {withCredentials: true})\n        //     .then(data => {\n        //         this.props.toggleIsFetching(false)\n        //         this.props.setUsers(data.items)\n        //         this.props.setUsersTotalCount(data.totalCount)\n        //     })\n    }\n\n    onChangeNumber = (pageNumber: number): void => {\n        this.props.toggleIsFetching(true)\n        this.props.setCurrentPage(pageNumber);\n        getUsers(pageNumber,this.props.pageSize )    // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\n            // {withCredentials: true})\n            .then(data => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(data.items)\n                this.props.setUsersTotalCount(data.totalCount)\n            })\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   onChangeNumber={this.onChangeNumber}\n            setUsers={this.props.setUsers}\n            setCurrentPage={this.props.setCurrentPage}\n            followingInProgress={this.props.followingInProgress}\n            toggleFollowingInProgress={this.props.toggleFollowingInProgress}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n// const mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n//     return {\n//         follow: (userID) => {\n//             dispatch(followAC(userID))\n//         },\n//         unfollow: (userID) => {\n//             dispatch(unFollowAC(userID))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setUsersTotalCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetching(isFetching))\n//         },\n//\n//     }\n//\n// }\n\nconst UsersContainer = connect(mapStateToProps,\n    {\n        follow,\n        unfollow,\n        setUsers,\n        setCurrentPage,\n        setUsersTotalCount,\n        toggleIsFetching,\n        toggleFollowingInProgress\n    })(UsersAPIComponent)\n\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}