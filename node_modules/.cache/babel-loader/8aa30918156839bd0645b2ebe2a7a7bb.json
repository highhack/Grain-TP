{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': 'fe02794e-87fe-4fe8-ada5-f6fa7d443c83'\n  }\n});\nexport const getUsers = (currentPage, pageSize) => instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\nexport const getAuthMe = () => instance.get(`auth/me`).then(response => response.data);\nexport const postFollow = id => instance.post(`follow/${id}`, {}).then(response => response.data);\nexport const deleteFollow = id => instance.delete(`follow/${id}`).then(response => response.data);","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/api/api.ts"],"names":["axios","instance","create","baseURL","withCredentials","headers","getUsers","currentPage","pageSize","get","then","response","data","getAuthMe","postFollow","id","post","deleteFollow","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAMA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,+CADiB;AAE1BC,EAAAA,eAAe,EAAE,IAFS;AAG1BC,EAAAA,OAAO,EAAE;AACL,eAAW;AADN;AAHiB,CAAb,CAAjB;AAQA,OAAO,MAAMC,QAAQ,GAAG,CAACC,WAAD,EAAsBC,QAAtB,KACpBP,QAAQ,CAACQ,GAAT,CAAc,cAAaF,WAAY,UAASC,QAAS,EAAzD,EACKE,IADL,CACUC,QAAQ,IAAKA,QAAQ,CAACC,IADhC,CADG;AAIP,OAAO,MAAMC,SAAS,GAAG,MACrBZ,QAAQ,CAACQ,GAAT,CAAc,SAAd,EACKC,IADL,CACUC,QAAQ,IAAKA,QAAQ,CAACC,IADhC,CADG;AAIP,OAAQ,MAAME,UAAU,GAAIC,EAAD,IACvBd,QAAQ,CAACe,IAAT,CAAe,UAASD,EAAG,EAA3B,EAA8B,EAA9B,EACKL,IADL,CACUC,QAAQ,IAAKA,QAAQ,CAACC,IADhC,CADI;AAIR,OAAQ,MAAMK,YAAY,GAAIF,EAAD,IACzBd,QAAQ,CAACiB,MAAT,CAAiB,UAASH,EAAG,EAA7B,EACKL,IADL,CACUC,QAAQ,IAAKA,QAAQ,CAACC,IADhC,CADI","sourcesContent":["import axios from \"axios\";\n\nexport type InstanceType = {\n    baseURL: string\n}\n\nconst instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        'API-KEY': 'fe02794e-87fe-4fe8-ada5-f6fa7d443c83'\n    }\n})\n\nexport const getUsers = (currentPage: number, pageSize: number) =>\n    instance.get(`users?page=${currentPage}&count=${pageSize}`)\n        .then(response =>  response.data)\n\nexport const getAuthMe = () =>\n    instance.get(`auth/me`)\n        .then(response =>  response.data)\n\nexport  const postFollow = (id: number) =>\n    instance.post(`follow/${id}`, {})\n        .then(response =>  response.data)\n\nexport  const deleteFollow = (id: number) =>\n    instance.delete(`follow/${id}`)\n        .then(response =>  response.data)"]},"metadata":{},"sourceType":"module"}