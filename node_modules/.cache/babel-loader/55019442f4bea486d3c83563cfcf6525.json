{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Dialogs/DialogsContainer.tsx\";\nimport React from 'react';\nimport { addMassageActionCreator, updateNewMassageBodyActionCreator } from '../../Redux/dialogReducer';\nimport Dialogs from \"./Dialogs\";\n\nconst DialogsContainer = props => {\n  let state = props.store.getState();\n\n  let addMassage = () => {\n    props.store.dispatch(addMassageActionCreator()); //функция которая сидит в state (addPost) и добавляет пост после нажатия на кнопку и перерисовывает\n  }; // props.updateNewPost('')      функция обновляет данные в state и перерисовывает пустую строку (перенесли это действие в state\n\n\n  let onMasssgeChange = body => {\n    props.store.dispatch(updateNewMassageBodyActionCreator(body)); //функция которая сидит в state и обновляет данные при написании текста textarea\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    dialogPage: props.store._state.dialogPage,\n    updateNewMassageBody: onMasssgeChange,\n    addMassage: addMassage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DialogsContainer;\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Dialogs/DialogsContainer.tsx"],"names":["React","addMassageActionCreator","updateNewMassageBodyActionCreator","Dialogs","DialogsContainer","props","state","store","getState","addMassage","dispatch","onMasssgeChange","body","_state","dialogPage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,uBAAR,EAAiCC,iCAAjC,QAAyE,2BAAzE;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAKA,MAAMC,gBAAgB,GAAIC,KAAD,IAAsB;AAC3C,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,EAAZ;;AAIA,MAAIC,UAAU,GAAG,MAAM;AACnBJ,IAAAA,KAAK,CAACE,KAAN,CAAYG,QAAZ,CAAqBT,uBAAuB,EAA5C,EADmB,CACgI;AACtJ,GAFD,CAL2C,CAO8E;;;AACzH,MAAIU,eAAe,GAAIC,IAAD,IAAkB;AACpCP,IAAAA,KAAK,CAACE,KAAN,CAAYG,QAAZ,CAAqBR,iCAAiC,CAACU,IAAD,CAAtD,EADoC,CAC6G;AACpJ,GAFD;;AAGA,sBACA,QAAE,OAAF;AAAU,IAAA,UAAU,EAAEP,KAAK,CAACE,KAAN,CAAYM,MAAZ,CAAmBC,UAAzC;AAAsD,IAAA,oBAAoB,EAAEH,eAA5E;AAA6F,IAAA,UAAU,EAAEF;AAAzG;AAAA;AAAA;AAAA;AAAA,UADA;AAGH,CAdD;;KAAML,gB;AAgBN,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport store, {ActionsTypes, DialogPageType, StoreType} from \"../../Redux/redux-store\";\nimport {addMassageActionCreator, updateNewMassageBodyActionCreator} from '../../Redux/dialogReducer';\nimport Dialogs from \"./Dialogs\";\n\ntype PropsType = {\n    store: StoreType\n}\nconst DialogsContainer = (props: PropsType) => {\n    let state = props.store.getState()\n\n\n\n    let addMassage = () => {\n        props.store.dispatch(addMassageActionCreator())                                                                                                    //функция которая сидит в state (addPost) и добавляет пост после нажатия на кнопку и перерисовывает\n    }                                                                                                                        // props.updateNewPost('')      функция обновляет данные в state и перерисовывает пустую строку (перенесли это действие в state\n    let onMasssgeChange = (body: string) => {\n        props.store.dispatch(updateNewMassageBodyActionCreator(body))                                                                                    //функция которая сидит в state и обновляет данные при написании текста textarea\n    }\n    return (\n    < Dialogs dialogPage={props.store._state.dialogPage}  updateNewMassageBody={onMasssgeChange} addMassage={addMassage} />\n    )\n};\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}