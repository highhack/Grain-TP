{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Profil/ProfilContainer.tsx\";\nimport React from 'react';\nimport Profil from \"./Profil\";\nimport { connect } from \"react-redux\";\nimport { getUserProfil } from \"../../Redux/profilReducer\";\nimport { withRouter } from 'react-router-dom';\nimport withAuthComponent from \"../../hoc/withAuthComponent\";\n\nclass ProfilContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = '2';\n    }\n\n    this.props.getUserProfil(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profil, { ...this.props,\n        profil: this.props.profil\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet AuthRedirectcomponent = withAuthComponent(ProfilContainer);\n_c = AuthRedirectcomponent;\n\nlet mapStateToProps = state => {\n  return {\n    profil: state.profilPage.profil,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet WithUrlDataProfilContainer = withRouter(AuthRedirectcomponent);\n_c2 = WithUrlDataProfilContainer;\nexport default connect(mapStateToProps, {\n  getUserProfil\n})(WithUrlDataProfilContainer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthRedirectcomponent\");\n$RefreshReg$(_c2, \"WithUrlDataProfilContainer\");","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Profil/ProfilContainer.tsx"],"names":["React","Profil","connect","getUserProfil","withRouter","withAuthComponent","ProfilContainer","Component","componentDidMount","userId","props","match","params","render","profil","AuthRedirectcomponent","mapStateToProps","state","profilPage","isAuth","auth","WithUrlDataProfilContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AAEA,SAAuCC,UAAvC,QAAwD,kBAAxD;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;;AAkBA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAAyD;AAErDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAuB,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAtD;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,GAAT;AACH;;AACD,SAAKC,KAAL,CAAWP,aAAX,CAAyBM,MAAzB;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,MAAD,OAAa,KAAKH,KAAlB;AAAyB,QAAA,MAAM,EAAE,KAAKA,KAAL,CAAWI;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAhBoD;;AAoBzD,IAAIC,qBAAqB,GAAGV,iBAAiB,CAACC,eAAD,CAA7C;KAAIS,qB;;AAEJ,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHH,IAAAA,MAAM,EAAEG,KAAK,CAACC,UAAN,CAAiBJ,MADtB;AAEHK,IAAAA,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAIH,CALD;;AAOA,IAAIE,0BAA0B,GAAGjB,UAAU,CAACW,qBAAD,CAA3C;MAAIM,0B;AACJ,eAAenB,OAAO,CAACc,eAAD,EAClB;AACIb,EAAAA;AADJ,CADkB,CAAP,CAGRkB,0BAHQ,CAAf","sourcesContent":["import React from 'react';\nimport Profil from \"./Profil\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {getUserProfil} from \"../../Redux/profilReducer\";\nimport {profilType} from \"./ProfilInfo/ProfilInfo\";\nimport {Redirect, RouteComponentProps, withRouter} from 'react-router-dom';\nimport withAuthComponent from \"../../hoc/withAuthComponent\";\n\n\n\n\ntype MapStatePropsType = {\n    profil: profilType\n    isAuth: boolean\n}\ntype MapDispathPropsType = {\n    getUserProfil: (id: string) => void\n}\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\ntype PathParamsType = {\n    userId: string,\n}\ntype PropsType = RouteComponentProps<PathParamsType> & UsersPropsType\n\nclass ProfilContainer extends React.Component<PropsType> {\n\n    componentDidMount() {\n        let userId: string | number = this.props.match.params.userId\n        if (!userId) {\n            userId = '2'\n        }\n        this.props.getUserProfil(userId)\n    }\n\n    render() {\n        return (\n            <div>\n                <Profil  {...this.props} profil={this.props.profil}/>\n            </div>\n        )\n    }\n\n}\n\nlet AuthRedirectcomponent = withAuthComponent(ProfilContainer)\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        profil: state.profilPage.profil,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet WithUrlDataProfilContainer = withRouter(AuthRedirectcomponent)\nexport default connect(mapStateToProps,\n    {\n        getUserProfil\n    })(WithUrlDataProfilContainer)\n\n"]},"metadata":{},"sourceType":"module"}