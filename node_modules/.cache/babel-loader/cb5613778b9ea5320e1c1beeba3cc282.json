{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Profil/ProfilContainer.tsx\";\nimport React from 'react';\nimport Profil from \"./Profil\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setUsers, setUsersTotalCount, toggleIsFetching, unfollow } from \"../../Redux/usersReducer\";\n\nclass ProfilContainer extends React.Component {\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/profile`).then(resolve => {\n      this.props.setUserProfile(resolve.data.items);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profil, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users\n  };\n}; // const mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n//     return {\n//         follow: (userID) => {\n//             dispatch(followAC(userID))\n//         },\n//         unfollow: (userID) => {\n//             dispatch(unFollowAC(userID))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setUsersTotalCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetching(isFetching))\n//         },\n//\n//     }\n//\n// }\n\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setUsersTotalCount,\n  toggleIsFetching\n})(UsersAPIComponent);\nexport default ProfilContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Profil/ProfilContainer.tsx"],"names":["React","Profil","axios","connect","follow","setCurrentPage","setUsers","setUsersTotalCount","toggleIsFetching","unfollow","ProfilContainer","Component","componentDidMount","get","then","resolve","props","setUserProfile","data","items","render","mapStateToProps","state","users","usersPage","UsersContainer","UsersAPIComponent"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,QAHJ,EAIIC,kBAJJ,EAKIC,gBALJ,EAMIC,QANJ,QAOO,0BAPP;;AASA,MAAMC,eAAN,SAA8BV,KAAK,CAACW,SAApC,CAA8C;AAE1CC,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,KAAK,CAACW,GAAN,CAAW,sDAAX,EACKC,IADL,CACUC,OAAO,IAAI;AACb,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,OAAO,CAACG,IAAR,CAAaC,KAAvC;AACH,KAHL;AAIH;;AACDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAfyC;;AAmB9C,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD;AADpB,GAAP;AAGH,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,cAAc,GAAGtB,OAAO,CAACkB,eAAD,EAC1B;AACIjB,EAAAA,MADJ;AAEIK,EAAAA,QAFJ;AAGIH,EAAAA,QAHJ;AAIID,EAAAA,cAJJ;AAKIE,EAAAA,kBALJ;AAMIC,EAAAA;AANJ,CAD0B,CAAP,CAQhBkB,iBARgB,CAAvB;AAUA,eAAehB,eAAf","sourcesContent":["import React from 'react';\nimport Profil from \"./Profil\";\nimport axios from \"axios\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    setUsers,\n    setUsersTotalCount,\n    toggleIsFetching,\n    unfollow\n} from \"../../Redux/usersReducer\";\n\nclass ProfilContainer extends React.Component {\n\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile`)\n            .then(resolve => {\n                this.props.setUserProfile(resolve.data.items)\n            })\n    }\n    render() {\n\n        return (\n            <div>\n                <Profil/>\n            </div>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users,\n    }\n}\n\n// const mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n//     return {\n//         follow: (userID) => {\n//             dispatch(followAC(userID))\n//         },\n//         unfollow: (userID) => {\n//             dispatch(unFollowAC(userID))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setUsersTotalCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetching(isFetching))\n//         },\n//\n//     }\n//\n// }\n\nconst UsersContainer = connect(mapStateToProps,\n    {\n        follow,\n        unfollow,\n        setUsers,\n        setCurrentPage,\n        setUsersTotalCount,\n        toggleIsFetching,\n    })(UsersAPIComponent)\n\nexport default ProfilContainer;"]},"metadata":{},"sourceType":"module"}