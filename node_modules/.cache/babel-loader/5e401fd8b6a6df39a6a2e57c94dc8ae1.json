{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, unfollow, setCurrentPage, toggleFollowingInProgress } from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../../common/Preloader\";\n\nclass UsersAPIComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeNumber = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize); // this.props.toggleIsFetching(true)\n      // this.props.setCurrentPage(pageNumber);\n      // getUsers(pageNumber,this.props.pageSize )    // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\n      //     // {withCredentials: true})\n      //     .then(data => {\n      //         this.props.toggleIsFetching(false)\n      //         this.props.setUsers(data.items)\n      //         this.props.setUsersTotalCount(data.totalCount)\n      //     })\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize); // this.props.toggleIsFetching(true)\n    // getUsers(this.props.currentPage ,this.props.pageSize)   // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\n    //     // {withCredentials: true})\n    //     .then(data => {\n    //         this.props.toggleIsFetching(false)\n    //         this.props.setUsers(data.items)\n    //         this.props.setUsersTotalCount(data.totalCount)\n    //     })\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        onChangeNumber: this.onChangeNumber,\n        setUsers: this.props.setUsers,\n        setCurrentPage: this.props.setCurrentPage,\n        followingInProgress: this.props.followingInProgress,\n        toggleFollowingInProgress: this.props.toggleFollowingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n}; // const mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n//     return {\n//         follow: (userID) => {\n//             dispatch(followAC(userID))\n//         },\n//         unfollow: (userID) => {\n//             dispatch(unFollowAC(userID))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setUsersTotalCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetching(isFetching))\n//         },\n//\n//     }\n//\n// }\n\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  // setUsers,\n  setCurrentPage,\n  // setUsersTotalCount,\n  // toggleIsFetching,\n  toggleFollowingInProgress,\n  getUserTunkCreator\n})(UsersAPIComponent);\nexport default UsersContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx"],"names":["React","connect","follow","unfollow","setCurrentPage","toggleFollowingInProgress","Users","Preloader","UsersAPIComponent","Component","onChangeNumber","pageNumber","props","getUsers","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","setUsers","followingInProgress","mapStateToProps","state","usersPage","UsersContainer","getUserTunkCreator"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SACIC,MADJ,EAEIC,QAFJ,EAKIC,cALJ,EAM0CC,yBAN1C,QAOO,0BAPP;AAQA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAwBA,MAAMC,iBAAN,SAAgCR,KAAK,CAACS,SAAtC,CAAgE;AAAA;AAAA;;AAAA,SAc5DC,cAd4D,GAc1CC,UAAD,IAA8B;AAC3C,WAAKC,KAAL,CAAWC,QAAX,CAAqBF,UAArB,EAAiC,KAAKC,KAAL,CAAWE,QAA5C,EAD2C,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAzB2D;AAAA;;AAE5DC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWC,QAAX,CAAqB,KAAKD,KAAL,CAAWI,WAAhC,EAA6C,KAAKJ,KAAL,CAAWE,QAAxD,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAeDG,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBACF,KAAKL,KAAL,CAAWM,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IADrC,eAEH,QAAC,KAAD;AAAO,QAAA,eAAe,EAAE,KAAKN,KAAL,CAAWO,eAAnC;AACO,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,QAD5B;AAEO,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWI,WAF/B;AAGO,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWQ,KAHzB;AAIO,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWV,MAJ1B;AAKO,QAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWT,QAL5B;AAMO,QAAA,cAAc,EAAE,KAAKO,cAN5B;AAOA,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWS,QAPrB;AAQA,QAAA,cAAc,EAAE,KAAKT,KAAL,CAAWR,cAR3B;AASA,QAAA,mBAAmB,EAAE,KAAKQ,KAAL,CAAWU,mBAThC;AAUA,QAAA,yBAAyB,EAAE,KAAKV,KAAL,CAAWP;AAVtC;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAcH;;AA1C2D;;AA6ChE,IAAIkB,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,SAAN,CAAgBL,KADpB;AAEHN,IAAAA,QAAQ,EAAEU,KAAK,CAACC,SAAN,CAAgBX,QAFvB;AAGHK,IAAAA,eAAe,EAAEK,KAAK,CAACC,SAAN,CAAgBN,eAH9B;AAIHH,IAAAA,WAAW,EAAEQ,KAAK,CAACC,SAAN,CAAgBT,WAJ1B;AAKHE,IAAAA,UAAU,EAAEM,KAAK,CAACC,SAAN,CAAgBP,UALzB;AAMHI,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AANlC,GAAP;AAQH,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMI,cAAc,GAAGzB,OAAO,CAACsB,eAAD,EAC1B;AACIrB,EAAAA,MADJ;AAEIC,EAAAA,QAFJ;AAGI;AACAC,EAAAA,cAJJ;AAKI;AACA;AACAC,EAAAA,yBAPJ;AAQIsB,EAAAA;AARJ,CAD0B,CAAP,CAUhBnB,iBAVgB,CAAvB;AAYA,eAAekB,cAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {\n    follow,\n    unfollow,\n    setUsers,\n    UsersType,\n    setCurrentPage,\n    setUsersTotalCount, toggleIsFetching, toggleFollowingInProgress, getUserThunkCreator\n} from \"../../Redux/usersReducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../../common/Preloader\";\nimport {getUsers} from \"../../api/api\";\n\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\ntype MapDispathPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    setUsers: (users: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setUsersTotalCount: (totalUsersCount: number) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) => void\n    getUsers: (currentPage: number, pageSize: number) => void\n}\n\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\n\n    componentDidMount() {\n        this.props.getUsers (this.props.currentPage ,this.props.pageSize)\n        // this.props.toggleIsFetching(true)\n        // getUsers(this.props.currentPage ,this.props.pageSize)   // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`,\n        //     // {withCredentials: true})\n        //     .then(data => {\n        //         this.props.toggleIsFetching(false)\n        //         this.props.setUsers(data.items)\n        //         this.props.setUsersTotalCount(data.totalCount)\n        //     })\n    }\n\n    onChangeNumber = (pageNumber: number): void => {\n        this.props.getUsers (pageNumber, this.props.pageSize)\n        // this.props.toggleIsFetching(true)\n        // this.props.setCurrentPage(pageNumber);\n        // getUsers(pageNumber,this.props.pageSize )    // axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`,\n        //     // {withCredentials: true})\n        //     .then(data => {\n        //         this.props.toggleIsFetching(false)\n        //         this.props.setUsers(data.items)\n        //         this.props.setUsersTotalCount(data.totalCount)\n        //     })\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   onChangeNumber={this.onChangeNumber}\n            setUsers={this.props.setUsers}\n            setCurrentPage={this.props.setCurrentPage}\n            followingInProgress={this.props.followingInProgress}\n            toggleFollowingInProgress={this.props.toggleFollowingInProgress}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n// const mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n//     return {\n//         follow: (userID) => {\n//             dispatch(followAC(userID))\n//         },\n//         unfollow: (userID) => {\n//             dispatch(unFollowAC(userID))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setUsersTotalCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetching(isFetching))\n//         },\n//\n//     }\n//\n// }\n\nconst UsersContainer = connect(mapStateToProps,\n    {\n        follow,\n        unfollow,\n        // setUsers,\n        setCurrentPage,\n        // setUsersTotalCount,\n        // toggleIsFetching,\n        toggleFollowingInProgress,\n        getUserTunkCreator\n    })(UsersAPIComponent)\n\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}