{"ast":null,"code":"import Users from \"./Users\";\nimport { connect } from \"react-redux\";\nimport { followAC, unFollowAC, usersAC } from \"../../Redux/usersReducer\";\n\nlet mapStateToProps = state => {\n  return {\n    usersPage: state.usersPage.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unFollowAC(userID));\n    },\n    users: setUsers => {\n      dispatch(usersAC(setUsers));\n    }\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\nexport default UsersContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx"],"names":["Users","connect","followAC","unFollowAC","usersAC","mapStateToProps","state","usersPage","users","mapDispatchToProps","dispatch","follow","userID","unfollow","setUsers","UsersContainer"],"mappings":"AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,SAAQC,QAAR,EAAyCC,UAAzC,EAAqDC,OAArD,QAA8E,0BAA9E;;AAaA,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBC;AADxB,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAA6C;AACpE,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAY;AAChBF,MAAAA,QAAQ,CAACR,QAAQ,CAACU,MAAD,CAAT,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAY;AAClBF,MAAAA,QAAQ,CAACP,UAAU,CAACS,MAAD,CAAX,CAAR;AACH,KANE;AAOHJ,IAAAA,KAAK,EAAGM,QAAD,IAAc;AACjBJ,MAAAA,QAAQ,CAACN,OAAO,CAACU,QAAD,CAAR,CAAR;AACH;AATE,GAAP;AAWH,CAZD;;AAaA,MAAMC,cAAc,GAAGd,OAAO,CAACI,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,KAA7C,CAAvB;AAEA,eAAee,cAAf","sourcesContent":["import React from 'react';\nimport Users from \"./Users\";\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {followAC, InitialStateUsersType, unFollowAC, usersAC, UsersType} from \"../../Redux/usersReducer\";\n\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    usersPage: Array<UsersType>\n}\ntype MapDispathPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    users: (setUsers: Array<UsersType>) => void\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        usersPage: state.usersPage.users\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n    return {\n        follow: (userID) => {\n            dispatch(followAC(userID))\n        },\n        unfollow: (userID) => {\n            dispatch(unFollowAC(userID))\n        },\n        users: (setUsers) => {\n            dispatch(usersAC(setUsers))\n        }\n    }\n}\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)\n\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}