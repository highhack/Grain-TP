{"ast":null,"code":"import { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../Redux/profilReducer\";\nimport { connect } from \"react-redux\";\nimport Dialogs from \"../../Dialogs/Dialogs\"; // type PropsType = {\n//     store: Store\n// }\n//\n//\n// const MyPostsContainer = (props: PropsType) => {\n//     let state = props.store.getState()\n//\n//     let addPost = () => {\n//         props.store.dispatch(addPostActionCreator())                                                                                                    //функция которая сидит в state (addPost) и добавляет пост после нажатия на кнопку и перерисовывает\n//     }                                                                                                                        // props.updateNewPost('')      функция обновляет данные в state и перерисовывает пустую строку (перенесли это действие в state\n//     let onPostChange = (text: string) => {\n//         let action = updateNewPostTextActionCreator(text)\n//         props.store.dispatch(action)                                                                                    //функция которая сидит в state и обновляет данные при написании текста textarea\n//     }\n//\n//     return (\n//        <MyPosts updateNewPostText={onPostChange}\n//                 addPost={addPost}\n//                 posts={state.profilPage.posts}\n//                 newPostText={state.profilPage.newPostText} />\n//     )\n// };\n\nlet mapStateToProps = state => {\n  return {\n    profilPage: state.profilPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    onPostChange: text => {\n      dispatch(updateNewPostTextActionCreator(text));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default MyPostsContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Profil/MyPosts/MyPostsContainer.tsx"],"names":["addPostActionCreator","updateNewPostTextActionCreator","connect","Dialogs","mapStateToProps","state","profilPage","mapDispatchToProps","dispatch","onAddPost","onPostChange","text","MyPostsContainer"],"mappings":"AAEA,SACIA,oBADJ,EAIIC,8BAJJ,QAKO,8BALP;AAYA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAeA,IAAIC,eAAe,GAAIC,KAAD,IAAgD;AAClE,SAAO;AACHC,IAAAA,UAAU,EAAED,KAAK,CAACC;AADf,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAA4C;AACnE,SAAO;AACHC,IAAAA,SAAS,EAAE,MAAM;AACbD,MAAAA,QAAQ,CAACR,oBAAoB,EAArB,CAAR;AACH,KAHE;AAIHU,IAAAA,YAAY,EAAGC,IAAD,IAAkB;AAC5BH,MAAAA,QAAQ,CAACP,8BAA8B,CAACU,IAAD,CAA/B,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAUA,MAAMC,gBAAgB,GAAGV,OAAO,CAACE,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CJ,OAA7C,CAAzB;AAIA,eAAeS,gBAAf","sourcesContent":["import React from 'react';\n\nimport {\n    addPostActionCreator,\n    InitialStatePostType,\n    ProfilType,\n    updateNewPostTextActionCreator\n} from \"../../../Redux/profilReducer\";\nimport {Dispatch} from \"redux\";\nimport {\n    InitialStateType,\n    updateNewMassageBodyActionCreator\n} from \"../../../Redux/dialogReducer\";\nimport {AllAppStateType} from \"../../../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport Dialogs from \"../../Dialogs/Dialogs\";\n\n\n// type PropsType = {\n//     store: Store\n// }\n//\n//\n// const MyPostsContainer = (props: PropsType) => {\n//     let state = props.store.getState()\n//\n//     let addPost = () => {\n//         props.store.dispatch(addPostActionCreator())                                                                                                    //функция которая сидит в state (addPost) и добавляет пост после нажатия на кнопку и перерисовывает\n//     }                                                                                                                        // props.updateNewPost('')      функция обновляет данные в state и перерисовывает пустую строку (перенесли это действие в state\n//     let onPostChange = (text: string) => {\n//         let action = updateNewPostTextActionCreator(text)\n//         props.store.dispatch(action)                                                                                    //функция которая сидит в state и обновляет данные при написании текста textarea\n//     }\n//\n//     return (\n//        <MyPosts updateNewPostText={onPostChange}\n//                 addPost={addPost}\n//                 posts={state.profilPage.posts}\n//                 newPostText={state.profilPage.newPostText} />\n//     )\n// };\n\nexport type ProfilPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    profilPage: InitialStatePostType\n\n}\n\ntype MapDispathPropsType = {\n    onAddPost: () => void\n    onPostChange: (text: string) => void\n}\n\n\nlet mapStateToProps = (state: AllAppStateType ): MapStatePropsType => {\n    return {\n        profilPage: state.profilPage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType=> {\n    return {\n        onAddPost: () => {\n            dispatch(addPostActionCreator())\n        },\n        onPostChange: (text: string) => {\n            dispatch(updateNewPostTextActionCreator(text))\n        }\n    }\n}\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n\n\n\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}