{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { followAC, unFollowAC, setUsersAC } from \"../../Redux/usersReducer\";\nimport UsersClass from \"./UsersClass\";\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unFollowAC(userID));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    }\n  };\n};\n\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersClass);\nexport default UsersContainer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Users/UsersContainer.tsx"],"names":["connect","followAC","unFollowAC","setUsersAC","UsersClass","mapStateToProps","state","users","usersPage","pageSize","totalUsersCount","currentPage","mapDispatchToProps","dispatch","follow","userID","unfollow","setUsers","UsersContainer"],"mappings":"AACA,SAAQA,OAAR,QAAsB,aAAtB;AAGA,SAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,UAA9B,QAA0D,0BAA1D;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAgBA,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADpB;AAEHE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,SAAN,CAAgBC,QAFvB;AAGHC,IAAAA,eAAe,EAAEJ,KAAK,CAACE,SAAN,CAAgBE,eAH9B;AAIHC,IAAAA,WAAW,EAAEL,KAAK,CAACE,SAAN,CAAgBG;AAJ1B,GAAP;AAMH,CAPD;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAA6C;AACpE,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAY;AAChBF,MAAAA,QAAQ,CAACZ,QAAQ,CAACc,MAAD,CAAT,CAAR;AACH,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAY;AAClBF,MAAAA,QAAQ,CAACX,UAAU,CAACa,MAAD,CAAX,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGV,KAAD,IAAW;AACjBM,MAAAA,QAAQ,CAACV,UAAU,CAACI,KAAD,CAAX,CAAR;AACH;AATE,GAAP;AAYH,CAbD;;AAcA,MAAMW,cAAc,GAAGlB,OAAO,CAACK,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CR,UAA7C,CAAvB;AAEA,eAAec,cAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {followAC, unFollowAC, setUsersAC, UsersType} from \"../../Redux/usersReducer\";\nimport UsersClass from \"./UsersClass\";\n\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n}\ntype MapDispathPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    setUsers: (newUsers: Array<UsersType>) => void\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n    return {\n        follow: (userID) => {\n            dispatch(followAC(userID))\n        },\n        unfollow: (userID) => {\n            dispatch(unFollowAC(userID))\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users))\n        }\n    }\n\n}\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersClass)\n\nexport default UsersContainer;"]},"metadata":{},"sourceType":"module"}