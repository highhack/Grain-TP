{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst USERS = 'USERS';\nlet initialState = {\n  users: [{\n    id: 1,\n    followed: true,\n    fullName: 'Dima',\n    status: 'i am a Boss',\n    location: {\n      city: 'Minsk',\n      country: 'Belorus'\n    }\n  }, {\n    id: 2,\n    followed: true,\n    fullName: 'Petr',\n    status: 'hello',\n    location: {\n      city: 'Kiev',\n      country: 'Ukraina'\n    }\n  }, {\n    id: 3,\n    followed: true,\n    fullName: 'Valik',\n    status: 'i am a Boss',\n    location: {\n      city: 'Kiev',\n      country: 'Ukraina'\n    }\n  }, {\n    id: 4,\n    followed: true,\n    fullName: 'Ira',\n    status: 'let speak',\n    location: {\n      city: 'Moscow',\n      country: 'Russia'\n    }\n  }, {\n    id: 5,\n    followed: true,\n    fullName: 'Dasha',\n    status: 'i am a clever',\n    location: {\n      city: 'Moskow',\n      country: 'Russia'\n    }\n  }]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case USERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport const unFollowAC = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport const usersAC = setUsers => ({\n  type: USERS,\n  setUsers\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/usersReducer.ts"],"names":["FOLLOW","UNFOLLOW","USERS","initialState","users","id","followed","fullName","status","location","city","country","usersReducer","state","action","type","map","u","userID","followAC","unFollowAC","usersAC","setUsers"],"mappings":"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","sourcesContent":["\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst USERS = 'USERS'\n\nexport type UsersType = {\n    id: number\n    followed: boolean\n    fullName: string\n    status: string\n    location: {city: string,\n        country: string}\n}\n\nexport type InitialStateUsersType = {\n    users: Array<UsersType>\n}\nlet initialState: InitialStateUsersType = {\n    users: [\n        {id: 1, followed: true,  fullName: 'Dima', status: 'i am a Boss', location: {city: 'Minsk', country: 'Belorus'}},\n        {id: 2, followed: true,  fullName: 'Petr', status: 'hello', location: {city: 'Kiev', country: 'Ukraina'}},\n        {id: 3, followed: true,  fullName: 'Valik', status: 'i am a Boss', location: {city: 'Kiev', country: 'Ukraina'}},\n        {id: 4, followed: true,  fullName: 'Ira', status: 'let speak', location: {city: 'Moscow', country: 'Russia'}},\n        {id: 5, followed: true,  fullName: 'Dasha', status: 'i am a clever', location: {city: 'Moskow', country: 'Russia'}},\n    ],\n}\n\n\nconst usersReducer = (state: InitialStateUsersType = initialState, action: ActionsType): InitialStateUsersType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: true}\n                    } return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: false}\n                    } return u\n                })\n            }\n        case USERS:\n            return {...state, users: [ ...state.users, ...action.users]}\n        default:\n            return state\n    }\n}\n\nexport const followAC = (userID: number) => ({type: FOLLOW, userID } as const)\nexport const unFollowAC = (userID: number) => ({type: UNFOLLOW, userID} as const)\nexport const usersAC = (setUsers: Array<UsersType>) => ({type: USERS, setUsers} as const)\ntype ActionsType =\n    | ReturnType<typeof followAC>\n    | ReturnType<typeof unFollowAC>\n    | ReturnType<typeof usersAC>\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}