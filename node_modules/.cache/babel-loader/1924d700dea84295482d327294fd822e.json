{"ast":null,"code":"import dialogReducer from \"./dialogReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport profilReducer from \"./profilReducer\";\nimport { combineReducers, createStore } from \"redux\"; // export type StateType = {\n//     profilPage: ProfilPageType\n//     dialogPage: DialogPageType\n//     sidebar: SidebarType\n// }\n// export type StoreType = {\n//     _state: StateType\n//     getState: () => StateType\n//     _callSubscriber: () => void\n//     subscribe: (observed: (state: StateType) => void) => void\n//     dispatch: (action: ActionsTypes) => void\n//     // updateNewPost: (postText: string) => void\n//     // addPost: (newPost: PostType) => void\n// }\n\nlet reducers = combineReducers({\n  dialogPage: dialogReducer,\n  profilPage: profilReducer,\n  sidebar: sidebarReducer\n});\nlet store = createStore(reducers);\nexport default store;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/redux-store.ts"],"names":["dialogReducer","sidebarReducer","profilReducer","combineReducers","createStore","reducers","dialogPage","profilPage","sidebar","store"],"mappings":"AACA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAAkD,OAAlD,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAIC,QAAQ,GAAGF,eAAe,CAAC;AAC3BG,EAAAA,UAAU,EAAEN,aADe;AAE3BO,EAAAA,UAAU,EAAEL,aAFe;AAG3BM,EAAAA,OAAO,EAAEP;AAHkB,CAAD,CAA9B;AAKA,IAAIQ,KAAY,GAAGL,WAAW,CAACC,QAAD,CAA9B;AAEA,eAAgBI,KAAhB","sourcesContent":["\nimport dialogReducer from \"./dialogReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport profilReducer from \"./profilReducer\";\nimport {combineReducers, createStore, Store} from \"redux\";\n\n\n// export type StateType = {\n//     profilPage: ProfilPageType\n//     dialogPage: DialogPageType\n//     sidebar: SidebarType\n// }\n// export type StoreType = {\n//     _state: StateType\n//     getState: () => StateType\n//     _callSubscriber: () => void\n//     subscribe: (observed: (state: StateType) => void) => void\n//     dispatch: (action: ActionsTypes) => void\n//     // updateNewPost: (postText: string) => void\n//     // addPost: (newPost: PostType) => void\n// }\n\n\nlet reducers = combineReducers({\n    dialogPage: dialogReducer,\n    profilPage: profilReducer,\n    sidebar: sidebarReducer\n})\nlet store: Store = createStore(reducers)\nexport type AllAppStateType = ReturnType<typeof reducers>\nexport  default store"]},"metadata":{},"sourceType":"module"}