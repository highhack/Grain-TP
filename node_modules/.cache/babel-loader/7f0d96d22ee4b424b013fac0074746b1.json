{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import s from'./Dialogs.module.css';import DialogItem from'./DialogItem/DialogItem';import Message from'./Message/Message';var Dialogs=function Dialogs(props){var DialogElements=props.dialogPage.dialogs.map(function(d){return/*#__PURE__*/_jsx(DialogItem,{name:d.name,id:d.id,img:d.img});});var MessegesElements=props.dialogPage.messages.map(function(m){return/*#__PURE__*/_jsx(Message,{message:m.message});});var onMassageClick=function onMassageClick(){props.addMassage();//функция которая сидит в state (addPost) и добавляет пост после нажатия на кнопку и перерисовывает\n};// props.updateNewPost('')      функция обновляет данные в state и перерисовывает пустую строку (перенесли это действие в state\nvar onMasssgeChange=function onMasssgeChange(e){var body=e.currentTarget.value;props.updateNewMassageBody(body);//функция которая сидит в state и обновляет данные при написании текста textarea\n};return/*#__PURE__*/_jsxs(\"div\",{className:s.dialogs,children:[/*#__PURE__*/_jsx(\"div\",{className:s.dialogItems,children:DialogElements}),/*#__PURE__*/_jsx(\"div\",{className:s.messages,children:MessegesElements}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"textarea\",{onChange:onMasssgeChange,value:props.dialogPage.newMassageBody}),/*#__PURE__*/_jsx(\"button\",{onClick:onMassageClick,children:\"send\"})]})]});};export default Dialogs;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Dialogs/Dialogs.tsx"],"names":["React","s","DialogItem","Message","Dialogs","props","DialogElements","dialogPage","dialogs","map","d","name","id","img","MessegesElements","messages","m","message","onMassageClick","addMassage","onMasssgeChange","e","body","currentTarget","value","updateNewMassageBody","dialogItems","newMassageBody"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAiC,OAAjC,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CAIA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAA6B,CAEzC,GAAIC,CAAAA,cAAc,CAAGD,KAAK,CAACE,UAAN,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,SAACC,CAAD,qBAE5C,KAAC,UAAD,EAAY,IAAI,CAAEA,CAAC,CAACC,IAApB,CAA0B,EAAE,CAAED,CAAC,CAACE,EAAhC,CAAoC,GAAG,CAAEF,CAAC,CAACG,GAA3C,EAF4C,EAA7B,CAArB,CAGA,GAAIC,CAAAA,gBAAgB,CAAGT,KAAK,CAACE,UAAN,CAAiBQ,QAAjB,CAA0BN,GAA1B,CAA8B,SAACO,CAAD,qBAA4B,KAAC,OAAD,EAAS,OAAO,CAAEA,CAAC,CAACC,OAApB,EAA5B,EAA9B,CAAvB,CACA,GAAIC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACvBb,KAAK,CAACc,UAAN,GAAqH;AACxH,CAFD,CAEyH;AACzH,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAyC,CAC3D,GAAIC,CAAAA,IAAI,CAAGD,CAAC,CAACE,aAAF,CAAgBC,KAA3B,CACAnB,KAAK,CAACoB,oBAAN,CAA2BH,IAA3B,EAEA;AACH,CALD,CAMA,mBACI,aAAK,SAAS,CAAErB,CAAC,CAACO,OAAlB,wBACI,YAAK,SAAS,CAAEP,CAAC,CAACyB,WAAlB,UACKpB,cADL,EADJ,cAII,YAAK,SAAS,CAAEL,CAAC,CAACc,QAAlB,UACKD,gBADL,EAJJ,cAOI,oCACI,iBAAU,QAAQ,CAAEM,eAApB,CAAqC,KAAK,CAAEf,KAAK,CAACE,UAAN,CAAiBoB,cAA7D,EADJ,cAEI,eAAQ,OAAO,CAAET,cAAjB,kBAFJ,GAPJ,GADJ,CAeH,CA9BD,CAgCA,cAAed,CAAAA,OAAf","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\n\nconst Dialogs = (props: DialogsPropsType) => {\n\n    let DialogElements = props.dialogPage.dialogs.map((d: {\n        img: string; name: string; id: number;\n    }) => <DialogItem name={d.name} id={d.id} img={d.img}/>)\n    let MessegesElements = props.dialogPage.messages.map((m: { message: string }) => <Message message={m.message}/>)\n    let onMassageClick = () => {\n        props.addMassage()                                                                                                   //функция которая сидит в state (addPost) и добавляет пост после нажатия на кнопку и перерисовывает\n    }                                                                                                                        // props.updateNewPost('')      функция обновляет данные в state и перерисовывает пустую строку (перенесли это действие в state\n    let onMasssgeChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        let body = e.currentTarget.value\n        props.updateNewMassageBody(body)\n\n        //функция которая сидит в state и обновляет данные при написании текста textarea\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogItems}>\n                {DialogElements}\n            </div>\n            <div className={s.messages}>\n                {MessegesElements}\n            </div>\n            <div>\n                <textarea onChange={onMasssgeChange} value={props.dialogPage.newMassageBody}/>\n                <button onClick={onMassageClick}>send</button>\n            </div>\n        </div>\n    )\n\n};\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}