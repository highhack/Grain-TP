{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Dialogs/DialogsContainer.tsx\";\nimport React from 'react';\nimport { addMassageActionCreator, updateNewMassageBodyActionCreator } from '../../Redux/dialogReducer';\nimport Dialogs from \"./Dialogs\";\nimport { connect } from 'react-redux';\nimport { Redirect } from \"react-router-dom\";\n\nlet AuthRedirectcomponent = props => {\n  if (!props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: '/login'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Dialogs, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_c = AuthRedirectcomponent;\n\nlet mapStateToProps = state => {\n  return {\n    dialogPage: state.dialogPage,\n    isAuth: state.auth.isAuth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMassage: () => {\n      dispatch(addMassageActionCreator());\n    },\n    updateNewMassageBody: body => {\n      dispatch(updateNewMassageBodyActionCreator(body));\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectcomponent);\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRedirectcomponent\");","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Dialogs/DialogsContainer.tsx"],"names":["React","addMassageActionCreator","updateNewMassageBodyActionCreator","Dialogs","connect","Redirect","AuthRedirectcomponent","props","isAuth","mapStateToProps","state","dialogPage","auth","mapDispatchToProps","dispatch","addMassage","updateNewMassageBody","body","DialogsContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,uBADJ,EAGIC,iCAHJ,QAIO,2BAJP;AAKA,OAAOC,OAAP,MAAoB,WAApB;AAGA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAcA,IAAIC,qBAAqB,GAAIC,KAAD,IAAgB;AACxC,MAAI,CAACA,KAAK,CAACC,MAAX,EAAmB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACnB,sBAAO,QAAC,OAAD,OAAcD;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAHD;;KAAID,qB;;AAKJ,IAAIG,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHC,IAAAA,UAAU,EAAED,KAAK,CAACC,UADf;AAEHH,IAAAA,MAAM,EAAEE,KAAK,CAACE,IAAN,CAAWJ;AAFhB,GAAP;AAIH,CALD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAA6C;AACpE,SAAO;AACHC,IAAAA,UAAU,EAAE,MAAM;AACdD,MAAAA,QAAQ,CAACb,uBAAuB,EAAxB,CAAR;AACH,KAHE;AAIHe,IAAAA,oBAAoB,EAAGC,IAAD,IAAkB;AACpCH,MAAAA,QAAQ,CAACZ,iCAAiC,CAACe,IAAD,CAAlC,CAAR;AACH;AANE,GAAP;AAQH,CATD;;AAUA,MAAMC,gBAAgB,GAAGd,OAAO,CAACK,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CP,qBAA7C,CAAzB;AAEA,eAAeY,gBAAf","sourcesContent":["import React from 'react';\nimport {\n    addMassageActionCreator,\n    InitialStateDialogType,\n    updateNewMassageBodyActionCreator\n} from '../../Redux/dialogReducer';\nimport Dialogs from \"./Dialogs\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {connect} from 'react-redux';\nimport {Redirect} from \"react-router-dom\";\n\n\nexport type DialogsPropsType = MapStatePropsType & MapDispathPropsType\n\ntype MapStatePropsType = {\n    dialogPage: InitialStateDialogType\n    isAuth: boolean\n}\ntype MapDispathPropsType = {\n    addMassage: () => void\n    updateNewMassageBody: (body: string) => void\n}\n\nlet AuthRedirectcomponent = (props: any) => {\n    if (!props.isAuth) return <Redirect to={'/login'}/>\n    return <Dialogs  {...props} />\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        dialogPage: state.dialogPage,\n        isAuth: state.auth.isAuth\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispathPropsType => {\n    return {\n        addMassage: () => {\n            dispatch(addMassageActionCreator())\n        },\n        updateNewMassageBody: (body: string) => {\n            dispatch(updateNewMassageBodyActionCreator(body))\n        }\n    }\n}\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectcomponent)\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}