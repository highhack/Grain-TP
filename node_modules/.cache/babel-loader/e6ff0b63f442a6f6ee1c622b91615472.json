{"ast":null,"code":"export const ADD_POST = 'ADD-POST';\nexport const UPDATE_NEW_POST = 'UPDATE-NEW-POST';\nexport const UPDATE_NEW_MASSAGE_BODY = 'UPDATE-NEW-MASSAGE-BODY';\nexport const ADD_MASSAGE = 'ADD-MASSAGE';\nlet store = {\n  _state: {\n    profilPage: {\n      posts: [{\n        message: 'Hi, how are you?',\n        id: 1,\n        likecount: \"15\"\n      }, {\n        message: \"It's my first post\",\n        id: 2,\n        likecount: \"16\"\n      }, {\n        message: \"blablabla\",\n        id: 3,\n        likecount: \"11\"\n      }],\n      newPostText: 'it-kamasutra'\n    },\n    dialogPage: {\n      dialogs: [{\n        name: 'Dima',\n        id: 1,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Andrey',\n        id: 2,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Alex',\n        id: 3,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Sveta',\n        id: 4,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Vova',\n        id: 5,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Dora',\n        id: 6,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }, {\n        name: 'Oleg',\n        id: 7,\n        img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'\n      }],\n      messages: [{\n        message: 'hi',\n        id: 1\n      }, {\n        message: 'good morning',\n        id: 2\n      }, {\n        message: 'hello',\n        id: 3\n      }, {\n        message: 'yo',\n        id: 4\n      }, {\n        message: 'How is going',\n        id: 5\n      }, {\n        message: 'Good bay',\n        id: 6\n      }, {\n        message: 'good night',\n        id: 7\n      }],\n      newMassageBody: 'write here'\n    },\n    sidebar: {\n      friends: [{\n        name: 'Dima',\n        id: 1,\n        img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'\n      }, {\n        name: 'Dora',\n        id: 2,\n        img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'\n      }, {\n        name: 'Oleg',\n        id: 3,\n        img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'\n      }]\n    }\n  },\n\n  _callSubscriber(_state) {\n    console.log('state changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observed) {\n    this._callSubscriber = observed;\n  },\n\n  _updateNewPost(postText) {\n    this._state.profilPage.newPostText = postText;\n\n    this._callSubscriber(this._state);\n  },\n\n  _addPost() {\n    const newPost = {\n      id: 4,\n      message: store._state.profilPage.newPostText,\n      likecount: '0'\n    };\n\n    this._state.profilPage.posts.push(newPost);\n\n    this._state.profilPage.newPostText = ''; // дает  пустую строку\n\n    this._callSubscriber(this._state);\n  } // dispatch(action: ActionsTypes) {\n  //     this._state = profilReducer(this._state, action)\n  //     this._state = dialogReducer(this._state, action)\n  //     this._state = sidebarReducer(this._state, action)\n  //\n  //     this._callSubscriber(this._state)\n  //\n  //     if (action.type === ADD_POST) {\n  //         const newPost: PostType = {\n  //             id: 4,\n  //             message: store._state.profilPage.newPostText,\n  //             likecount: '0'\n  //         };\n  //         this._state.profilPage.posts.push(newPost)\n  //         this._state.profilPage.newPostText = ''                                                                                     // дает  пустую строку\n  //         this._callSubscriber(this._state)\n  //     } else if (action.type === UPDATE_NEW_POST) {\n  //         this._state.profilPage.newPostText = action.postText\n  //         this._callSubscriber(this._state)\n  //     } else if (action.type === UPDATE_NEW_MASSAGE_BODY) {\n  //         this._state.dialogPage.newMassageBody = action.body\n  //         this._callSubscriber(this._state)\n  //     } else if (action.type === ADD_MASSAGE) {\n  //         let body = store._state.dialogPage.newMassageBody\n  //         const newMassage = {\n  //             message: body,\n  //             id: 8\n  //         };\n  //         this._state.dialogPage.messages.push(newMassage)\n  //         this._state.dialogPage.newMassageBody = ''                                                                                     // дает  пустую строку\n  //         this._callSubscriber(this._state)\n  //     }\n  // }\n\n\n};\nexport default store; //window.store = store","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/Store.ts"],"names":["ADD_POST","UPDATE_NEW_POST","UPDATE_NEW_MASSAGE_BODY","ADD_MASSAGE","store","_state","profilPage","posts","message","id","likecount","newPostText","dialogPage","dialogs","name","img","messages","newMassageBody","sidebar","friends","_callSubscriber","console","log","getState","subscribe","observed","_updateNewPost","postText","_addPost","newPost","push"],"mappings":"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","sourcesContent":["import profilReducer, {addPostActionCreator, updateNewPostTextActionCreator} from \"./profilReducer\";\nimport dialogReducer, {addMassageActionCreator, updateNewMassageBodyActionCreator} from \"./dialogReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\n\nexport type DialogType = {\n    name: string\n    id: number\n    img: string\n}\nexport type MessegeType = {\n    message: string\n    id: number\n}\nexport type PostType = {\n    message: string\n    id: number\n    likecount: string\n}\nexport type FriendType = {\n    name: string\n    id: number\n    img: string\n}\nexport type SidebarType = {\n    friends: Array<FriendType>\n}\nexport type ProfilPageType = {\n    posts: Array<PostType>\n    newPostText: string\n\n}\nexport type DialogPageType = {\n    dialogs: Array<DialogType>\n    messages: Array<MessegeType>\n    newMassageBody: string\n}\nexport type StateType = {\n    profilPage: ProfilPageType\n    dialogPage: DialogPageType\n    sidebar: SidebarType\n}\nexport type StoreType = {\n    _state: StateType\n    getState: () => StateType\n    _callSubscriber: () => void\n    updateNewPost: (postText: string) => void\n    addPost: (newPost: PostType) => void\n    subscribe: (observed: (state: StateType) => void) => void\n    dispatch: (action: ActionsTypes) => void\n}\nexport type ActionsTypes = (ReturnType<typeof addPostActionCreator> | ReturnType<typeof updateNewPostTextActionCreator> |\n    ReturnType<typeof addMassageActionCreator> | ReturnType<typeof updateNewMassageBodyActionCreator>)\n\nexport const ADD_POST = 'ADD-POST'\nexport const UPDATE_NEW_POST = 'UPDATE-NEW-POST'\nexport const UPDATE_NEW_MASSAGE_BODY = 'UPDATE-NEW-MASSAGE-BODY'\nexport const ADD_MASSAGE = 'ADD-MASSAGE'\n\nlet store = {\n    _state: {\n        profilPage: {\n            posts: [\n                {message: 'Hi, how are you?', id: 1, likecount: \"15\"},\n                {message: \"It's my first post\", id: 2, likecount: \"16\"},\n                {message: \"blablabla\", id: 3, likecount: \"11\"}\n            ],\n            newPostText: 'it-kamasutra'\n        },\n        dialogPage: {\n            dialogs: [\n                {name: 'Dima', id: 1, img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'},\n                {name: 'Andrey', id: 2, img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'},\n                {name: 'Alex', id: 3, img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'},\n                {name: 'Sveta', id: 4, img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'},\n                {name: 'Vova', id: 5, img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'},\n                {name: 'Dora', id: 6, img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'},\n                {name: 'Oleg', id: 7, img: 'https://image.freepik.com/free-photo/boy-holds-red-flowers-before-his-eyes_1304-4515.jpg'},\n            ],\n            messages: [\n                {message: 'hi', id: 1},\n                {message: 'good morning', id: 2},\n                {message: 'hello', id: 3},\n                {message: 'yo', id: 4},\n                {message: 'How is going', id: 5},\n                {message: 'Good bay', id: 6},\n                {message: 'good night', id: 7}\n            ],\n            newMassageBody: 'write here'\n        },\n        sidebar: {\n            friends: [\n                {name: 'Dima', id: 1, img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'},\n                {name: 'Dora', id: 2, img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'},\n                {name: 'Oleg', id: 3, img: 'https://image.freepik.com/free-vector/cute-blue-wolf-avatar_79416-81.jpg'},\n            ]\n        }\n\n    },\n    _callSubscriber(_state: StateType) {\n        console.log('state changed')\n    },\n  getState() {\n        return this._state\n    },\n    subscribe(observed: (state: StateType) => void) {\n        this._callSubscriber = observed\n    },\n    _updateNewPost(postText: string) {\n        this._state.profilPage.newPostText = postText\n        this._callSubscriber(this._state)\n    },\n    _addPost() {\n        const newPost: PostType = {\n            id: 4,\n            message: store._state.profilPage.newPostText,\n            likecount: '0'\n        };\n        this._state.profilPage.posts.push(newPost)\n        this._state.profilPage.newPostText = ''                                                                                     // дает  пустую строку\n        this._callSubscriber(this._state)\n    },\n    // dispatch(action: ActionsTypes) {\n    //     this._state = profilReducer(this._state, action)\n    //     this._state = dialogReducer(this._state, action)\n    //     this._state = sidebarReducer(this._state, action)\n    //\n    //     this._callSubscriber(this._state)\n    //\n    //     if (action.type === ADD_POST) {\n    //         const newPost: PostType = {\n    //             id: 4,\n    //             message: store._state.profilPage.newPostText,\n    //             likecount: '0'\n    //         };\n    //         this._state.profilPage.posts.push(newPost)\n    //         this._state.profilPage.newPostText = ''                                                                                     // дает  пустую строку\n    //         this._callSubscriber(this._state)\n    //     } else if (action.type === UPDATE_NEW_POST) {\n    //         this._state.profilPage.newPostText = action.postText\n    //         this._callSubscriber(this._state)\n    //     } else if (action.type === UPDATE_NEW_MASSAGE_BODY) {\n    //         this._state.dialogPage.newMassageBody = action.body\n    //         this._callSubscriber(this._state)\n    //     } else if (action.type === ADD_MASSAGE) {\n    //         let body = store._state.dialogPage.newMassageBody\n    //         const newMassage = {\n    //             message: body,\n    //             id: 8\n    //         };\n    //         this._state.dialogPage.messages.push(newMassage)\n    //         this._state.dialogPage.newMassageBody = ''                                                                                     // дает  пустую строку\n    //         this._callSubscriber(this._state)\n    //     }\n    // }\n}\n\n\n\n\nexport default store\n//window.store = store"]},"metadata":{},"sourceType":"module"}