{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_USERS_TOTAL_COUNT = 'SET-USERS-TOTAL-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 100,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: [...action.newUsers]\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_USERS_TOTAL_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const follow = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport const unfollow = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport const setUsers = newUsers => ({\n  type: SET_USERS,\n  newUsers\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = totalUsersCount => ({\n  type: SET_USERS_TOTAL_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/usersReducer.ts"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userID","followed","newUsers","count","follow","unfollow","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET-USERS'\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\nconst SET_USERS_TOTAL_COUNT = 'SET-USERS-TOTAL-COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\n\nexport type UsersType = {\n    id: number\n    followed: boolean\n    name: string\n    status: string\n    location: {\n        city: string,\n        country: string\n    }\n\n    photos: {\n        small: string | null,\n        large: string | null\n    }\n}\n\nexport type InitialStateUsersType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<UsersType>\n}\nlet initialState: InitialStateUsersType = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 100,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\n\nconst usersReducer = (state: InitialStateUsersType = initialState, action: ActionsType): InitialStateUsersType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userID) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n        case SET_USERS:\n            return {...state, users: [...action.newUsers]}\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage}\n            case SET_USERS_TOTAL_COUNT:\n            return {...state, totalUsersCount: action.count}\n            case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching}\n        default:\n            return state\n    }\n}\n\nexport const follow = (userID: number) => ({type: FOLLOW, userID} as const)\nexport const unfollow = (userID: number) => ({type: UNFOLLOW, userID} as const)\nexport const setUsers = (newUsers: Array<UsersType>) => ({type: SET_USERS, newUsers} as const)\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\nexport const setUsersTotalCount = (totalUsersCount: number) => ({type: SET_USERS_TOTAL_COUNT, count: totalUsersCount} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\ntype ActionsType =\n    | ReturnType<typeof follow>\n    | ReturnType<typeof unfollow>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setUsersTotalCount>\n    | ReturnType<typeof toggleIsFetching>\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}