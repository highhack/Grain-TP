{"ast":null,"code":"import dialogReducer from\"./dialogReducer\";import sidebarReducer from\"./sidebarReducer\";import profilReducer from\"./profilReducer\";import{combineReducers,createStore}from\"redux\";import usersReducer from\"./usersReducer\";export var rootReducer=combineReducers({dialogPage:dialogReducer,profilPage:profilReducer,sidebar:sidebarReducer,usersPage:usersReducer});var store=createStore(rootReducer);export default store;// export type StateType = {\n//     profilPage: ProfilPageType\n//     dialogPage: DialogPageType\n//     sidebar: SidebarType\n// }\n// export type StoreType = {\n//     _state: StateType\n//     getState: () => StateType\n//     _callSubscriber: () => void\n//     subscribe: (observed: (state: StateType) => void) => void\n//     dispatch: (action: ActionsTypes) => void\n//     // updateNewPost: (postText: string) => void\n//     // addPost: (newPost: PostType) => void\n// }","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/Redux/redux-store.ts"],"names":["dialogReducer","sidebarReducer","profilReducer","combineReducers","createStore","usersReducer","rootReducer","dialogPage","profilPage","sidebar","usersPage","store"],"mappings":"AACA,MAAOA,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAAQC,eAAR,CAAyBC,WAAzB,KAAkD,OAAlD,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAaA,MAAO,IAAMC,CAAAA,WAAW,CAAGH,eAAe,CAAC,CACvCI,UAAU,CAAEP,aAD2B,CAEvCQ,UAAU,CAAEN,aAF2B,CAGvCO,OAAO,CAAER,cAH8B,CAIvCS,SAAS,CAAEL,YAJ4B,CAAD,CAAnC,CAMP,GAAIM,CAAAA,KAAY,CAAGP,WAAW,CAACE,WAAD,CAA9B,CAEA,cAAgBK,CAAAA,KAAhB,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport dialogReducer from \"./dialogReducer\";\nimport sidebarReducer from \"./sidebarReducer\";\nimport profilReducer from \"./profilReducer\";\nimport {combineReducers, createStore, Store} from \"redux\";\nimport usersReducer from \"./usersReducer\";\n\nexport type DialogType = {\n    name: string\n    id: number\n    img: string\n}\nexport type MessegeType = {\n    message: string\n    id: number\n}\n\n\nexport const rootReducer = combineReducers({\n    dialogPage: dialogReducer,\n    profilPage: profilReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer\n})\nlet store: Store = createStore(rootReducer)\nexport type AllAppStateType = ReturnType<typeof rootReducer>\nexport  default store\n\n\n// export type StateType = {\n//     profilPage: ProfilPageType\n//     dialogPage: DialogPageType\n//     sidebar: SidebarType\n// }\n// export type StoreType = {\n//     _state: StateType\n//     getState: () => StateType\n//     _callSubscriber: () => void\n//     subscribe: (observed: (state: StateType) => void) => void\n//     dispatch: (action: ActionsTypes) => void\n//     // updateNewPost: (postText: string) => void\n//     // addPost: (newPost: PostType) => void\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}