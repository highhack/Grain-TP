{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Profil/ProfilContainer.tsx\";\nimport React from 'react';\nimport Profil from \"./Profil\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { setUserProfil } from \"../../Redux/profilReducer\";\nimport { withRouter } from 'react-router-dom';\n\nclass ProfilContainer extends React.Component {\n  componentDidMount() {\n    let userId = Number(this.props.match.params.userId);\n\n    if (!userId) {\n      return userId = 2;\n    }\n\n    axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId).then(resolve => {\n      this.props.setUserProfil(resolve.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profil, { ...this.props,\n        profil: this.props.profil\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profil: state.profilPage.profil\n  };\n};\n\nlet WithUrlDataProfilContainer = withRouter(ProfilContainer);\n_c = WithUrlDataProfilContainer;\nexport default connect(mapStateToProps, {\n  setUserProfil\n})(WithUrlDataProfilContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"WithUrlDataProfilContainer\");","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Profil/ProfilContainer.tsx"],"names":["React","Profil","axios","connect","setUserProfil","withRouter","ProfilContainer","Component","componentDidMount","userId","Number","props","match","params","get","then","resolve","data","render","profil","mapStateToProps","state","profilPage","WithUrlDataProfilContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AAEA,SAA6BC,UAA7B,QAA+C,kBAA/C;;AAgBA,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAAyD;AAErDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAc,GAAGC,MAAM,CAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBJ,MAAzB,CAA3B;;AACA,QAAI,CAACA,MAAL,EAAa;AACT,aAAOA,MAAM,GAAG,CAAhB;AACH;;AACDP,IAAAA,KAAK,CAACY,GAAN,CAAW,uDAAD,GAA0DL,MAApE,EACKM,IADL,CACUC,OAAO,IAAI;AACb,WAAKL,KAAL,CAAWP,aAAX,CAAyBY,OAAO,CAACC,IAAjC;AACH,KAHL;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,6BACI,QAAC,MAAD,OAAa,KAAKP,KAAlB;AAAyB,QAAA,MAAM,EAAE,KAAKA,KAAL,CAAWQ;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AApBoD;;AAwBzD,IAAIC,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHF,IAAAA,MAAM,EAAEE,KAAK,CAACC,UAAN,CAAiBH;AADtB,GAAP;AAGH,CAJD;;AAMA,IAAII,0BAA0B,GAAGlB,UAAU,CAACC,eAAD,CAA3C;KAAIiB,0B;AACJ,eAAepB,OAAO,CAACiB,eAAD,EAClB;AACIhB,EAAAA;AADJ,CADkB,CAAP,CAGRmB,0BAHQ,CAAf","sourcesContent":["import React from 'react';\nimport Profil from \"./Profil\";\nimport axios from \"axios\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {setUserProfil} from \"../../Redux/profilReducer\";\nimport {profilType} from \"./ProfilInfo/ProfilInfo\";\nimport {RouteComponentProps, withRouter } from 'react-router-dom';\n\n\n\ntype MapStatePropsType = {\n    profil: profilType\n}\ntype MapDispathPropsType = {\n    setUserProfil: (profil: profilType) => void\n}\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\ntype PathParamsType = {\n    userId: string,\n}\ntype PropsType = RouteComponentProps<PathParamsType> & UsersPropsType\n\nclass ProfilContainer extends React.Component<PropsType> {\n\n    componentDidMount() {\n        let userId: number = Number(this.props.match.params.userId)\n        if (!userId) {\n            return userId = 2\n        }\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n            .then(resolve => {\n                this.props.setUserProfil(resolve.data)\n            })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Profil  {...this.props} profil={this.props.profil}/>\n            </div>\n        )\n    }\n\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        profil: state.profilPage.profil\n    }\n}\n\nlet WithUrlDataProfilContainer = withRouter(ProfilContainer)\nexport default connect(mapStateToProps,\n    {\n        setUserProfil,\n    })(WithUrlDataProfilContainer)\n\n"]},"metadata":{},"sourceType":"module"}