{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Users/UsersContainer.tsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport Preloader from \"../../common/Preloader\";\nimport { follow, unfollow, setCurrentPage, toggleFollowingInProgress, getUserThunkCreator } from \"../../Redux/usersReducer\";\nimport { compose } from \"redux\";\nimport withAuthComponent from \"../../hoc/withAuthComponent\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChangeNumber = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        onChangeNumber: this.onChangeNumber,\n        setCurrentPage: this.props.setCurrentPage,\n        followingInProgress: this.props.followingInProgress,\n        toggleFollowingInProgress: this.props.toggleFollowingInProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n}; // const UsersContainer = connect(mapStateToProps,\n//     {\n//         follow,\n//         unfollow,\n//         setCurrentPage,\n//         toggleFollowingInProgress,\n//         getUsers: getUserThunkCreator\n//     })(UsersAPIComponent)\n//\n// export default UsersContainer;\n\n\nexport default compose(connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingInProgress,\n  getUsers: getUserThunkCreator\n}), withAuthComponent)(UsersContainer);","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray-from68lesson/src/components/Users/UsersContainer.tsx"],"names":["React","connect","Users","Preloader","follow","unfollow","setCurrentPage","toggleFollowingInProgress","getUserThunkCreator","compose","withAuthComponent","UsersContainer","Component","onChangeNumber","pageNumber","props","getUsers","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SACIC,MADJ,EACYC,QADZ,EACiCC,cADjC,EAEIC,yBAFJ,EAE+BC,mBAF/B,QAGO,0BAHP;AAIA,SAAQC,OAAR,QAAsB,OAAtB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;;AAoBA,MAAMC,cAAN,SAA6BX,KAAK,CAACY,SAAnC,CAA6D;AAAA;AAAA;;AAAA,SAMzDC,cANyD,GAMvCC,UAAD,IAAwB;AACrC,WAAKC,KAAL,CAAWC,QAAX,CAAoBF,UAApB,EAAgC,KAAKC,KAAL,CAAWE,QAA3C;AACH,KARwD;AAAA;;AAEzDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWI,WAA/B,EAA4C,KAAKJ,KAAL,CAAWE,QAAvD;AACH;;AAMDG,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBACF,KAAKL,KAAL,CAAWM,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IADrC,eAEH,QAAC,KAAD;AAAO,QAAA,eAAe,EAAE,KAAKN,KAAL,CAAWO,eAAnC;AACO,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,QAD5B;AAEO,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWI,WAF/B;AAGO,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWQ,KAHzB;AAIO,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWX,MAJ1B;AAKO,QAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWV,QAL5B;AAMO,QAAA,cAAc,EAAE,KAAKQ,cAN5B;AAOO,QAAA,cAAc,EAAE,KAAKE,KAAL,CAAWT,cAPlC;AAQO,QAAA,mBAAmB,EAAE,KAAKS,KAAL,CAAWS,mBARvC;AASO,QAAA,yBAAyB,EAAE,KAAKT,KAAL,CAAWR;AAT7C;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA,oBAAP;AAaH;;AAxBwD;;AA2B7D,IAAIkB,eAAe,GAAIC,KAAD,IAA+C;AACjE,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADpB;AAEHN,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBV,QAFvB;AAGHK,IAAAA,eAAe,EAAEI,KAAK,CAACC,SAAN,CAAgBL,eAH9B;AAIHH,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHE,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN,UALzB;AAMHG,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AANlC,GAAP;AAQH,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAiBf,OAAO,CACpBR,OAAO,CAACwB,eAAD,EACH;AACIrB,EAAAA,MADJ;AAEIC,EAAAA,QAFJ;AAGIC,EAAAA,cAHJ;AAIIC,EAAAA,yBAJJ;AAKIS,EAAAA,QAAQ,EAAER;AALd,CADG,CADa,EASpBE,iBAToB,CAAP,CAUfC,cAVe,CAAjB","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {AllAppStateType} from \"../../Redux/redux-store\";\nimport Users from \"./Users\";\nimport Preloader from \"../../common/Preloader\";\nimport {\n    follow, unfollow, UsersType, setCurrentPage,\n    toggleFollowingInProgress, getUserThunkCreator,\n} from \"../../Redux/usersReducer\";\nimport {compose} from \"redux\";\nimport withAuthComponent from \"../../hoc/withAuthComponent\";\n\nexport type UsersPropsType = MapStatePropsType & MapDispathPropsType\ntype MapStatePropsType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\ntype MapDispathPropsType = {\n    follow: (userID: number) => void\n    unfollow: (userID: number) => void\n    setCurrentPage: (pageNumber: number) => void\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) => void\n    getUsers: (currentPage: number, pageSize: number) => void\n}\n\n\nclass UsersContainer extends React.Component<UsersPropsType> {\n\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onChangeNumber = (pageNumber: number) => {\n        this.props.getUsers(pageNumber, this.props.pageSize)\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   onChangeNumber={this.onChangeNumber}\n                   setCurrentPage={this.props.setCurrentPage}\n                   followingInProgress={this.props.followingInProgress}\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n}\n\n// const UsersContainer = connect(mapStateToProps,\n//     {\n//         follow,\n//         unfollow,\n//         setCurrentPage,\n//         toggleFollowingInProgress,\n//         getUsers: getUserThunkCreator\n//     })(UsersAPIComponent)\n//\n// export default UsersContainer;\n\nexport  default  compose<React.ComponentType>(\n    connect(mapStateToProps,\n        {\n            follow,\n            unfollow,\n            setCurrentPage,\n            toggleFollowingInProgress,\n            getUsers: getUserThunkCreator\n        }),\n    withAuthComponent\n)(UsersContainer);"]},"metadata":{},"sourceType":"module"}