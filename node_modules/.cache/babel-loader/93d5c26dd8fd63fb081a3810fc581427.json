{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Profil/MyPosts/MyPosts.tsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst MyPosts = props => {\n  /*let post = [\n    {message: 'Hi, how are you?', id: 1 ,likecount: \"15\"},\n    {message: \"It's my first post\" , id: 2 , likecount:\"16\"},\n      {message: \"blablabla\" , id: 3 , likecount:\"11\"}\n    ]*/\n  let PostsElements = props.post.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    likecount: p.likecount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 45\n  }, this));\n  let postMessageRef = /*#__PURE__*/React.createRef();\n\n  let addPost = () => {\n    if (postMessageRef.current) {\n      let text = postMessageRef.current.value;\n      props.addPostCallback(text);\n      postMessageRef.current.value = '';\n    }\n  };\n\n  let onPostChange = () => {\n    let text = postMessageRef.current.value;\n    props.updateNewPost(text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.mypost,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onPostChange,\n        ref: postMessageRef,\n        value: props.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPost,\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), PostsElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyPosts;\nexport default MyPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"sources":["/home/gerich/Documents/it-kamasutra/TP-way-of-samuray/tp-samuray/src/components/Profil/MyPosts/MyPosts.tsx"],"names":["React","s","Post","MyPosts","props","PostsElements","post","map","p","message","likecount","postMessageRef","createRef","addPost","current","text","value","addPostCallback","onPostChange","updateNewPost","mypost","newPostText"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AASA,MAAMC,OAAO,GAAIC,KAAD,IAAsB;AAEpC;AACF;AACA;AACA;AACA;AAEI,MAAIC,aAAa,GAAGD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAeC,CAAC,iBAAI,QAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,CAAC,CAACC,OAAjB;AAA2B,IAAA,SAAS,EAAED,CAAC,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,UAApB,CAApB;AAEA,MAAIC,cAAc,gBAAGX,KAAK,CAACY,SAAN,EAArB;;AAED,MAAIC,OAAO,GAAE,MAAM;AACf,QAAIF,cAAc,CAACG,OAAnB,EAA4B;AACxB,UAAIC,IAAI,GAAGJ,cAAc,CAACG,OAAf,CAAuBE,KAAlC;AACAZ,MAAAA,KAAK,CAACa,eAAN,CAAsBF,IAAtB;AACAJ,MAAAA,cAAc,CAACG,OAAf,CAAuBE,KAAvB,GAA+B,EAA/B;AACH;AACJ,GAND;;AAQC,MAAIE,YAAY,GAAG,MAAM;AACrB,QAAIH,IAAI,GAAGJ,cAAc,CAACG,OAAf,CAAuBE,KAAlC;AACAZ,IAAAA,KAAK,CAACe,aAAN,CAAoBJ,IAApB;AACH,GAHD;;AAIF,sBACE;AAAK,IAAA,SAAS,EAAEd,CAAC,CAACmB,MAAlB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAA,6BACF;AAAU,QAAA,QAAQ,EAAEF,YAApB;AAAkC,QAAA,GAAG,EAAEP,cAAvC;AAAuD,QAAA,KAAK,EAAEP,KAAK,CAACiB;AAApE;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAA,6BACF;AAAQ,QAAA,OAAO,EAAGR,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YALJ,EAQGR,aARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApCD;;KAAMF,O;AAsCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {PostType, ProfilPageType} from \"../../../Redux/State\";\n\ntype PropsType = {\n    post: Array<PostType>\n    addPostCallback:(text: string) => void\n    updateNewPost:(text: string) => void\n    newPostText: string\n}\nconst MyPosts = (props: PropsType) => {\n\n  /*let post = [\n    {message: 'Hi, how are you?', id: 1 ,likecount: \"15\"},\n    {message: \"It's my first post\" , id: 2 , likecount:\"16\"},\n      {message: \"blablabla\" , id: 3 , likecount:\"11\"}\n    ]*/\n\n    let PostsElements = props.post.map(p => <Post message={p.message}  likecount={p.likecount} />)\n\n    let postMessageRef = React.createRef<HTMLTextAreaElement>();\n\n   let addPost =() => {\n       if (postMessageRef.current) {\n           let text = postMessageRef.current.value;\n           props.addPostCallback(text)\n           postMessageRef.current.value = ''\n       }\n   }\n\n    let onPostChange = () => {\n        let text = postMessageRef.current.value;\n        props.updateNewPost(text)\n    }\n  return (\n    <div className={s.mypost}>\n      <h3>My posts</h3>\n        <div>\n      <textarea onChange={onPostChange} ref={postMessageRef} value={props.newPostText}/>\n        </div>\n        <div>\n      <button onClick={ addPost} >Add post</button>\n        </div>\n      {PostsElements}\n    </div>\n  )\n};\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}